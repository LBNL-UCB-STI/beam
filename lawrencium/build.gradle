import java.time.Instant

group = 'beam'
version = '0.8.0'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        gradlePluginPortal()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:2.10.1'
    }
}

apply plugin: 'org.hidetake.ssh'

if (!project.hasProperty("lawrenciumUser")) {
    ext.lawrenciumUser = "nikolay"
}

remotes {
    lawrenciumLoginNode {
        host = 'lrc-login.lbl.gov'
        user = "${lawrenciumUser}"
    }
}

tasks.register("deployToLawrencium") {
    doLast {
        ssh.run {
            settings {
                authentications = ["keyboard-interactive"]
                knownHosts = allowAnyHosts
                password = "Zomb1986" + project.findProperty("otp")
            }

            def base_path = "https://raw.githubusercontent.com/LBNL-UCB-STI/beam/inm/lawrencium-automatization/lawrencium/src/main/bash"

            session(remotes.lawrenciumLoginNode) {
                execute "rm -f slurm_job.sh"
                execute "rm -f slurm_job_runner.sh"
                // downloading files instead of sending them
                // because it is not allowed to push files to login node
                // file transfer node uses different type of authentication
                // and both nodes are not working together within one session for some reason
                execute "wget $base_path/slurm_job.sh"
                execute "wget $base_path/slurm_job_runner.sh"
                execute "chmod +x slurm_job_runner.sh slurm_job.sh"
                // execute "ls -lah"
                execute "./slurm_job_runner.sh " +
                        "--BEAM_BRANCH_NAME='develop' " +
                        "--BEAM_COMMIT_SHA='' " +
                        "--BEAM_DATA_BRANCH_NAME='develop' " +
                        "--BEAM_DATA_COMMIT_SHA='' " +
                        "--BEAM_CONFIG='test/input/beamville/beam.conf' " +
                        "--RUN_NAME='beamville_test' " +
                        "--MAX_RAM='16' " +
                        "--PROFILER='' " +
                        "--PULL_CODE='true' " +
                        "--PULL_DATA='true' " +
                        "--ACCOUNT='pc_beamcore' " +
                        "--PARTITION='es1' " +
                        "--QOS='es_normal' " +
                        "--MEMORY_LIMIT='480' " +
                        "--EXPECTED_EXECUTION_DURATION='0-00:30:00' " +
                        "--DOCKER_IMAGE_NAMESPACE='beammodel' " +
                        "--DOCKER_IMAGE_NAME='beam-environment' " +
                        "--DOCKER_IMAGE_TAG='latest' " +
                        "--S3_REGION='us-east-2' " +
                        "--S3_PUBLISH='false' " +
                        "--AWS_SECRET_ACCESS_KEY='?' " +
                        "--AWS_ACCESS_KEY_ID='?' " +
                        "--SLACK_HOOK_WITH_TOKEN='?' " +
                        "--SEND_NOTIFICATION='false' " +
                        "--SLACK_HOOK_WITH_TOKEN='' " +
                        "--SIMULATIONS_SPREADSHEET_UPDATE_URL='?' "
                execute "squeue -u $lawrenciumUser"
            }
        }
    }
}


tasks.register("lawrenciumQueue") {
    doLast {
        ssh.run {
            settings {
                authentications = ["keyboard-interactive"]
                knownHosts = allowAnyHosts
                password = "Zomb1986" + project.findProperty("otp")
            }

            def sacctFormat = "JobID,JobName%30,state,start,end,elapsed,nnodes,ncpus,nodelist,user,partition,maxrss,maxvmsize,time"

            if (!project.hasProperty("fromDate")) {
                Instant now = Instant.now()
                Instant yesterday = now.minus(1, ChronoUnit.DAYS)
                ext.fromDate = DateTimeFormatter.ofPattern("yyyyMMdd")
                        .withZone(ZoneId.of("UTC"))
                        .format(yesterday)
            }


            session(remotes.lawrenciumLoginNode) {
                execute "sacct -u $lawrenciumUser --format=$sacctFormat -S 2023-03-2"
            }
        }
    }
}