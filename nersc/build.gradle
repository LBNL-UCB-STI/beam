group = 'beam'
version = '0.8.0'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:2.10.1'
    }
}

apply plugin: 'org.hidetake.ssh'

remotes {
    nerscLoginNode {
        host = 'cori.nersc.gov'
        user = 'dmitriio'
        identity = file("${System.properties['user.home']}/.ssh/nersc")
    }
}

task deployToNersc {
    def propsFileName = "../gradle.deploy.properties"
    if (project.hasProperty('propsFile')) {
        propsFileName = project.findProperty('propsFile')
    }

    def propsFile = new Properties()
    propsFile.load(project.file(propsFileName).newDataInputStream())

    ext.getParameterValue = { paramName ->
        if (project.hasProperty(paramName)) {
            return project.findProperty(paramName)
        } else {
            return propsFile.getProperty(paramName)
        }
    }

    def branch = "${ext.getParameterValue('beamBranch') ?: getCurrentGitBranch()}"
    def commit = "${ext.getParameterValue('beamCommit') ?: 'HEAD'}"
    def configs = "${ext.getParameterValue('beamConfigs') ?: ext.getParameterValue(getCurrentGitBranch() + '.configs')}"
    def max_ram = "${ext.getParameterValue('maxRAM') ?: '140g'}"
    def google_api_key = "${System.getenv('GOOGLE_API_KEY') ?: 'not-set-in-env'}"
    def s3_publish = "${ext.getParameterValue('s3Backup') ?: true}"
    def aws_access_key_id = "${System.getenv('AWS_ACCESS_KEY_ID') ?: 'not-set-in-env'}"
    def aws_secret_access_key = "${System.getenv('AWS_SECRET_ACCESS_KEY') ?: 'not-set-in-env'}"
    def region = "${ext.getParameterValue('region') ?: defaultRegion}"

    doLast {
        ssh.run {
            session(remotes.nerscLoginNode) {
                put from: 'nersc/src/main/bash/run_beam_on_nersc.sh', into: "run_beam.sh"
                execute "chmod 755 run_beam.sh"
                execute "nohup ./run_beam.sh \
                            --branch='$branch' \
                            --revision='$commit' \
                            --config='$configs' \
                            --max_ram=$max_ram \
                            --google_api_key=$google_api_key \
                            --s3_publish=$s3_publish \
                            --aws_access_key_id=$aws_access_key_id \
                            --aws_secret_access_key=$aws_secret_access_key \
                            --region=$region \
                             > cloud-init-output_\$(date +%Y%m%d%H%M%S).log 2>&1 &"
            }
        }
    }
}
