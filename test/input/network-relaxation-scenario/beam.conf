include "../common/akka.conf"
include "../common/metrics.conf"
include "../common/matsim.conf"

beam.inputDirectory = "test/input/network-relaxation-scenario"

##################################################################
# SPATIAL
##################################################################
beam.spatial = {
  localCRS = "epsg:32631"  # what crs to use for distance calculations, must be in units of meters
  boundingBoxBuffer = 10000 # meters of buffer around network for defining extend of spatial indices
}

beam.physsim.inputNetworkFilePath = ${beam.routing.r5.directory}"/physsim-network.xml"
beam.physsim.network.removeIslands = false
beam.physsim.flowCapacityFactor = 0.05
beam.physsim.writeEventsInterval = 1
beam.physsim.events.fileOutputFormats = "xml,csv"

beam.agentsim.taz.filePath=${beam.inputDirectory}"/taz-centers.csv"
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 15
beam.agentsim.endTime = "30:00:00"

beam.agentsim.agents.rideHail.managers = [{}]

beam.agentsim.simulationName = "network-relaxation-scenario"
beam.agentsim.agents.plans = {
  inputPersonAttributesFilePath = ""
  inputPlansFilePath = ""
}

beam.agentsim.agents.households = {
  inputFilePath = ""
  inputHouseholdAttributesFilePath = ""
}

beam.agentsim.agents.vehicles {
  vehicleTypesFilePath = ${beam.inputDirectory}"/vehicleTypes.csv"
  vehiclesFilePath = ${beam.inputDirectory}"/vehicles.csv"
  fuelTypesFilePath = ${beam.inputDirectory}"/beamFuelTypes.csv"
  sharedFleets = []
  fractionOfPeopleWithBicycle = 0
}

beam.replanning = {
  maxAgentPlanMemorySize = 4
  Module_1 = "SelectExpBeta"
  ModuleProbability_1 = 0.8
  Module_2 = "ClearRoutes"
  ModuleProbability_2 = 0.2
  Module_3 = "ClearModes"
  ModuleProbability_3 = 0.0
  Module_4 = "TimeMutator"
  ModuleProbability_4 = 0.0
}

beam.outputs.defaultWriteInterval = 1
beam.outputs.collectAndCreateBeamAnalysisAndGraphs = false
beam.outputs.writeR5RoutesInterval = 0

#beam.outputs.events.fileOutputFormats = "csv,xml" # valid options: xml(.gz) , csv(.gz), none - DEFAULT: csv.gz
# Events Writing Logging Levels:
#beam.outputs.events.eventsToWrite = "PersonDepartureEvent,PersonArrivalEvent,ActivityEndEvent,ActivityStartEvent,PersonEntersVehicleEvent,PersonLeavesVehicleEvent,ModeChoiceEvent,PathTraversalEvent,ReserveRideHailEvent,ReplanningEvent,RefuelSessionEvent,TeleportationEvent,ChargingPlugInEvent,ChargingPlugOutEvent,ParkingEvent,LeavingParkingEvent"

beam.calibration.counts = {
  countsScaleFactor = 10.355
  writeCountsInterval = 0
  averageCountsOverIterations = ${beam.outputs.defaultWriteInterval}
}

beam.debug.stuckAgentDetection.thresholds = []


beam.routing.carRouter="R5"
beam.routing {
  baseDate = "2016-10-17T00:00:00-07:00"
  r5 {
    directory = ${beam.inputDirectory}"/r5"
    osmMapdbFile = ${beam.inputDirectory}"/r5/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
  }
}

beam.exchange.scenario {
  source = "urbansim_v2"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/urbansim_v2"
  modeMap = ["CAR -> car"]
  convertWgs2Utm = false
}

beam.agentsim.agents.vehicles.fractionOfInitialVehicleFleet = 0.0
beam.agentsim.agents.vehicles.generateEmergencyHouseholdVehicleWhenPlansRequireIt = true