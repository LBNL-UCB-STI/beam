include "gemini-base-2035.conf"
beam.agentsim.simulationName = "gemini-base-2035-activitysim"

# The full sample is the 30% sample
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 0.03
beam.physsim.flowCapacityFactor = 0.03
beam.outputs.defaultWriteInterval = 1
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 0
beam.agentsim.endTime = "30:00:00"

# beam.debug.writeModeChoiceAlternatives = true

beam.agentsim.agents.rideHail.allocationManager.maxWaitingTimeInSec = 4000

# some for speed improvement
beam.agentsim.agents.rideHail.allocationManager.matchingAlgorithm = "ASYNC_GREEDY_VEHICLE_CENTRIC_MATCHING"
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 1.0
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.maxRequestsPerVehicle = 2
# beam.agentsim.agents.rideHail.allocationManager.name = "DEFAULT_MANAGER"
# beam.agentsim.agents.rideHail.allocationManager.requestBufferTimeoutInSeconds = 0

beam.agentsim.thresholdForWalkingInMeters = 100
beam.agentsim.thresholdForMakingParkingChoiceInMeters = 100

# physim name
beam.physsim.name = "PARBPRSim"

# writing statistics
# beam.routing.writeRoutingStatistic = true


# fraction of vehicle
beam.agentsim.agents.vehicles.fractionOfInitialVehicleFleet = 500.0

# solving spliting problem
beam.routing.r5.linkRadiusMeters = 33300.0

# for logging
# beam.debug.messageLogging = true

#clear_mode
beam.urbansim.fractionOfModesToClear.allModes = 1.0

#turning off enroute
beam.agentsim.agents.vehicles.enroute.remainingDistanceWrtBatteryCapacityThreshold = 0

#reducing parking search radius
beam.agentsim.agents.parking.minSearchRadius = 100
beam.agentsim.agents.parking.maxSearchRadius = 800

# adding more ridehails


#debugnbsd nn bv
# beam.debug.writeModeChoiceAlternatives = true

# Modal factors for 'LOW' non-car propensity
# Car -> walk_transit -> bike_transit -> rideHail -> walk
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.transfer = -1.4
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.car_intercept = 20.0

beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_transit_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.drive_transit_intercept = 1.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_transit_intercept = 133.0

beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_intercept = 500.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_pooled_intercept = 500.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_intercept = 110.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_intercept = 58.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.CAV = 0.35 // Does not effect mode choice
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.bike = 22.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.drive = -20.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.rideHail = -5.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.transit = 10.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.waiting = 2.0
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.walk = 33.0

beam.agentsim.tuning.transitCapacity = 1
beam.agentsim.agents.modalBehaviors.bikeMultiplier.commute.ageGT60 = 1
beam.agentsim.agents.modalBehaviors.bikeMultiplier.noncommute.ageGT60 = 10
beam.agentsim.agents.modalBehaviors.bikeMultiplier.commute.ageLE60 = 3
# even higher restrict for the ages
beam.agentsim.agents.modalBehaviors.bikeMultiplier.noncommute.ageLE60 = 25

beam.agentsim.agents.modalBehaviors.bikeMultiplier.commute.incomeGT50k = 1
beam.agentsim.agents.modalBehaviors.bikeMultiplier.noncommute.incomeGT50k = 10
beam.agentsim.agents.modalBehaviors.bikeMultiplier.commute.incomeLE50k = 3
beam.agentsim.agents.modalBehaviors.bikeMultiplier.noncommute.incomeLE50k = 25

# beam.agentsim.agents.tripBehaviors.carUsage.minDistanceToTrainStop = 1600


# parameter from neural network
# beam.agentsim.agents.modalBehaviors.modeVotMultiplier.bike = 0
# beam.agentsim.agents.modalBehaviors.modeVotMultiplier.drive = 0.04
# beam.agentsim.agents.modalBehaviors.modeVotMultiplier.transit = -0.3
# beam.agentsim.agents.modalBehaviors.modeVotMultiplier.rideHail = 0.05
# beam.agentsim.agents.modalBehaviors.modeVotMultiplier.walk = 0.01
# beam.agentsim.agents.modalBehaviors.modeVotMultiplier.waiting = 0.02
#
# beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_intercept = -2.9
# beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_transit_intercept = 0.1
# beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.car_intercept = 1.75
# beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.drive_transit_intercept = -1.22
# beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_intercept = -0.35
# beam.agentsim.agents.modalBehaviors.mulitnom-ialLogit.params.walk_transit_intercept = 0.42



#fixed
# beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_transit_intercept = 40
# beam.agentsim.agents.modalBehaviors.modeVotMultiplier.bike = 5.0

# don't skipPhysSim
beam.physsim.skipPhysSim = false


beam.exchange.scenario {
  # source for now can be "MATSim" or "UrbanSim"
  source = "urbansim_v2"
  # Input file format for scenario loader can be "csv" or "parquet"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/activitysim-plans-base-2010-0.1population"
  convertWgs2Utm = true
    modeMap = [
        "BIKE           -> bike",
        "DRIVEALONEFREE -> car",
        "DRIVEALONEPAY  -> car",
        "DRIVE_COM      -> drive_transit",
        "DRIVE_EXP      -> drive_transit",
        "DRIVE_HVY      -> drive_transit",
        "DRIVE_LOC      -> drive_transit",
        "DRIVE_LRF      -> drive_transit",
        "SHARED2FREE    -> car",
        "SHARED2PAY     -> car",
        "SHARED3FREE    -> car",
        "SHARED3PAY     -> car",
        "TAXI           -> ride_hail",
        "TNC_SHARED     -> ride_hail",
        "TNC_SINGLE     -> ride_hail",
        "WALK           -> walk",
        "WALK_COM       -> walk_transit",
        "WALK_EXP       -> walk_transit",
        "WALK_HVY       -> walk_transit",
        "WALK_LOC       -> walk_transit",
        "WALK_LRF       -> walk_transit",
    ]
}

#########
# Charging Behavior calibration
#
# how far go from current position to charging
# increase both home and work
# decrease home 2 and increase home 1 when negative, increase home 2 and decreae home 1 when positive
beam.agentsim.agents.parking.mulitnomialLogit.params.distanceMultiplier = 5
# increase if need less public charging
# with -30 increase home 1 and 2 and decrease others
# with 30 significantly decrease home 1, increase work and DCFC, decrease public
beam.agentsim.agents.parking.mulitnomialLogit.params.parkingPriceMultiplier = 0
# home charging vs others
beam.agentsim.agents.parking.mulitnomialLogit.params.homeActivityPrefersResidentialParkingMultiplier = 0
# increase if need more public charging
# effect if small for small runs with values [-30,30]
beam.agentsim.agents.parking.mulitnomialLogit.params.rangeAnxietyMultiplier = 35
#########

########
# Charging Infrastructure
beam.agentsim.agents.rideHail.initialization.parking.filePath = ${beam.inputDirectory}"/../parking/gemini_depot_parking_power_150kw.csv"
beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/../parking/gemini_taz_parking_plugs_power_150kw.csv"
beam.agentsim.taz.parkingStallCountScalingFactor = 1000

#########
# using defaults because these values are overridden in gemini baseline
beam.agentsim.fractionOfPlansWithSingleActivity = 0.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.generate_secondary_activities = false
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.intercept_file_path = ""
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.activity_file_path = ""
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.additional_trip_utility = 0.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.max_destination_distance_meters = 32000
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.max_destination_choice_set_size = 20
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.destination_nest_scale_factor = 1.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.mode_nest_scale_factor = 1.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.trip_nest_scale_factor = 1.0
########

########
# google api usage
beam.calibration.google.travelTimes {
    enable=false
    iterationInterval=5
    minDistanceInMeters=5000.0
    numDataPointsOver24Hours=100
    offPeakEnabled=false
    queryDate="2020-10-14"
    tolls=true
}
########


########
# input data from activity sim
# beam.routing {
#   #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
#   baseDate = "2017-09-22T00:00:00-07:00"
#   transitOnStreetNetwork = true
#   r5 {
#     directory = ${beam.inputDirectory}"/../r5-updated"
#     # Departure window in min
#     departureWindow = 1.0167
#     osmFile = ${beam.inputDirectory}"/../r5-updated/sf-bay.osm.pbf"
#     osmMapdbFile = ${beam.inputDirectory}"/../r5-updated/osm.mapdb"
#     mNetBuilder.fromCRS = "epsg:4326" # WGS84
#     mNetBuilder.toCRS = ${beam.spatial.localCRS}
#   }
# }
########

# including shared fleets

beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/../smart/vehicle-tech/vehicletypes-baseline-different-price.csv"
beam.agentsim.agents.vehicles.fractionOfPeopleWithBicycle=0.1

beam.agentsim.agents.vehicles.sharedFleets = [
  {
    name = "bay_wheels"
    managerType = "fixed-non-reserving-fleet-by-taz"

    parkingFilePath = ${beam.inputDirectory}"/../parking/shared-bike-parking-hubs-199-real.csv"
    #@optional
    fixed-non-reserving-fleet-by-taz {
      vehicleTypeId = "sharedVehicle-sharedBike",
      vehiclesSharePerTAZFromCSV = ${beam.inputDirectory}"/../parking/shared-bike-initial-199-real.csv",
      maxWalkingDistance = 500,
#      //https://mtc.ca.gov/operations/traveler-services/bay-wheels-bike-share-program
      fleetSize = 84

    }
  }
]