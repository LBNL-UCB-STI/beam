akka {
    actor {
        debug {
            unhandled=on
        }
        serialization-bindings {}
        serializers {}
    }
    deployment {
        "/router/router-worker" {
            dispatcher=router-dispatcher
        }
    }
    log-dead-letters=0
    loggers=[
        "akka.event.slf4j.Slf4jLogger"
    ]
    logging-filter="akka.event.slf4j.Slf4jLoggingFilter"
    remote {
        log-sent-messages=on
    }
}
beam {
    agentsim {
        agents {
            drivingCost {
                defaultLitersPerMeter=1.069E-4
                defaultPricePerGallon=3.115
            }
            modalBehaviors {
                defaultValueOfTime=18
                lccm {
                    paramFile=${beam.inputDirectory}"/lccm-long.csv"
                }
                modeChoiceClass=ModeChoiceMultinomialLogit
                mulitnomialLogit {
                    params {
                        "bike_intercept"=0
                        "car_intercept"=0
                        cost=-1
                        "drive_transit_intercept"=-5.066
                        "ride_hail_intercept"=5
                        "ride_hail_transit_intercept"=5
                        time=-0.0047
                        transfer=-1.4
                        "walk_intercept"=-12.647726
                        "walk_transit_intercept"=-6.567151614803805
                    }
                }
            }
            rideHail {
                allocationManager {
                    name="EV_MANAGER"
                    randomRepositioning {
                        repositioningShare=0.2
                    }
                    repositionLowWaitingTimes {
                        allowIncreasingRadiusIfDemandInRadiusLow=true
                        demandWeight=4
                        distanceWeight=0.01
                        keepMaxTopNScores=5
                        minDemandPercentageInRadius=0.1
                        minScoreThresholdForRepositioning=1.0E-5
                        minimumNumberOfIdlingVehiclesThreshholdForRepositioning=1
                        percentageOfVehiclesToReposition=0.01
                        produceDebugImages=true
                        repositionCircleRadisInMeters=3000
                        repositioningMethod="TOP_SCORES"
                        timeWindowSizeInSecForDecidingAboutRepositioning=1200
                        waitingTimeWeight=4
                    }
                    timeoutInSeconds=300
                }
                defaultCostPerMile=1.25
                defaultCostPerMinute=0.75
                initialLocation {
                    home {
                        radiusInMeters=10000
                    }
                    name=HOME
                }
                iterationStats {
                    timeBinSizeInSec=3600
                }
                numDriversAsFractionOfPopulation=0.0241651
                refuelLocationType=AtTAZCenter
                refuelThresholdInMeters=32000
                rideHailManager {
                    radiusInMeters=5000
                }
                surgePricing {
                    minimumSurgeLevel=0.1
                    priceAdjustmentStrategy="KEEP_PRICE_LEVEL_FIXED_AT_ONE"
                    surgeLevelAdaptionStep=0.1
                }
                vehicleTypeId=BEV150
            }
            vehicles {
                beamFuelTypesFile=${beam.inputDirectory}"/samples/fuelTypes.csv"
                beamVehicleTypesFile=${beam.inputDirectory}"/samples/vehicleTypes.csv"
                beamVehiclesFile=${beam.inputDirectory}"/samples/vehicles.csv.gz"
                bicycles {
                    useBikes=false
                }
            }
        }
        numAgents=413817
        schedulerParallelismWindow=300
        simulationName=output
        taz {
            file=${beam.inputDirectory}"/taz-centers.csv"
            parking="/home/ubuntu/git/beam/production/application-sfbay/parking/FCS_planning_results_S60/taz-parking_S60_P250_R150_F10k.csv"
        }
        thresholdForWalkingInMeters=100
        tuning {
            rideHailPrice=1
            tollPrice=1
            transitCapacity=0.22080797450913886
            transitPrice=1
        }
    }
    basePackage=beam
    calibration {
        objectiveFunction=CountsObjectiveFunction
    }
    debug {
        debugEnabled=false
        secondsToWaitForSkip=30
        skipOverBadActors=true
        stuckAgentDetection {
            checkIntervalMs="200ms"
            enabled=true
            thresholds=[
                {
                    markAsStuckAfterMs="400s"
                    triggerType="beam.agentsim.agents.ridehail.RideHailManager$RideHailAllocationManagerTimeout"
                },
                {
                    markAsStuckAfterMs="200s"
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$NotifyLegEndTrigger"
                },
                {
                    markAsStuckAfterMs="600s"
                    triggerType="beam.agentsim.agents.PersonAgent$ActivityEndTrigger"
                },
                {
                    markAsStuckAfterMs="200s"
                    triggerType="beam.agentsim.agents.ridehail.RideHailManager$BufferedRideHailRequestsTimeout"
                },
                {
                    markAsStuckAfterMs="180s"
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$StartLegTrigger"
                },
                {
                    markAsStuckAfterMs="200s"
                    triggerType="beam.agentsim.agents.PersonAgent$ActivityStartTrigger"
                },
                {
                    markAsStuckAfterMs="200s"
                    triggerType="beam.agentsim.agents.InitializeTrigger"
                },
                {
                    markAsStuckAfterMs="200s"
                    triggerType="beam.agentsim.agents.PersonAgent$PersonDepartureTrigger"
                },
                {
                    markAsStuckAfterMs="210s"
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$NotifyLegStartTrigger"
                },
                {
                    markAsStuckAfterMs="600s"
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$EndLegTrigger"
                },
                {
                    markAsStuckAfterMs="600s"
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$StartRefuelTrigger"
                },
                {
                    markAsStuckAfterMs="600s"
                    triggerType="beam.agentsim.agents.modalbehaviors.DrivesVehicle$EndRefuelTrigger"
                }
            ]
        }
    }
    inputDirectory="/home/ubuntu/git/beam/production/application-sfbay"
    metrics {
        level=off
    }
    outputs {
        addTimestampToOutputDirectory="false"
        baseOutputDirectory="production/application-sfbay/experiments/ev-fleet-qos-S60/runs/run.chargers_taz-parking_S60_P250_R150_F10k"
        events {
            defaultWritingLevel=OFF
            explodeIntoFiles=false
            fileOutputFormats="csv.gz,xml"
            overrideWritingLevels="beam.agentsim.events.ModeChoiceEvent:VERBOSE, beam.agentsim.events.PathTraversalEvent:VERBOSE, org.matsim.api.core.v01.events.PersonEntersVehicleEvent:REGULAR, org.matsim.api.core.v01.events.PersonLeavesVehicleEvent:REGULAR, beam.agentsim.events.RefuelEvent:VERBOSE"
        }
        writeEventsInterval=1
        writePlansInterval=1
    }
    physsim {
        flowCapacityFactor=1
        jdeqsim {
            agentSimPhysSimInterfaceDebugger {
                enabled=false
            }
        }
        linkstatsBinSize=3600
        linkstatsWriteInterval=1
        ptSampleSize=0.03
        skipPhysSim=true
        storageCapacityFactor=1
        writeEventsInterval=0
        writeMATSimNetwork=false
        writePlansInterval=0
    }
    routing {
        baseDate="2017-09-22T00:00:00-07:00"
        gtfs {
            apiKey=${?GTFS_API_KEY}
            crs="epsg:26910"
            operatorsFile="src/main/resources/GTFSOperators.csv"
            outputDir=${beam.outputs.baseOutputDirectory}"/gtfs"
        }
        r5 {
            departureWindow=1.0167
            directory=${beam.inputDirectory}"/r5-no-local"
            mNetBuilder {
                fromCRS="EPSG:4326"
                toCRS="EPSG:26910"
            }
            osmFile=${beam.inputDirectory}"/r5-no-local/sf-bay.osm.pbf"
            osmMapdbFile=${beam.inputDirectory}"/r5-no-local/osm.mapdb"
        }
        routerClass="beam.router.r5.R5RoutingWorker"
        transitOnStreetNetwork=true
    }
    spatial {
        boundingBoxBuffer=10000
        localCRS="epsg:26910"
    }
    warmStart {
        enabled=false
        path="https://s3.us-east-2.amazonaws.com/beam-outputs/run149-base__2018-06-27_20-28-26_2a2e2bd3.zip"
        pathType="PARENT_RUN"
    }
}
kamon {
    metric {
        filters {
            akka-actor {
                excludes=[
                    "beam-actor-system/system/**",
                    "beam-actor-system/user/worker-helper"
                ]
                "includes"=[
                    "beam-actor-system/user/router/**",
                    "beam-actor-system/user/worker-*"
                ]
            }
            akka-dispatcher {
                "includes"=[
                    "beam-actor-system/akka.actor.default-dispatcher"
                ]
            }
            trace {
                "includes"=[
                    "**"
                ]
            }
        }
    }
    modules {}
    trace {
        level=simple-trace
    }
}
matsim {
    modules {
        changeMode {
            modes="car,pt"
        }
        controler {
            eventsFileFormat=xml
            firstIteration=0
            lastIteration=0
            outputDirectory=${beam.outputs.baseOutputDirectory}"/pt-tutorial"
            overwriteFiles=overwriteExistingFiles
        }
        counts {
            averageCountsOverIterations=1
            countsScaleFactor=10.355
            inputCountsFile=${beam.inputDirectory}"/counts/sfbay-counts-2018-09-26.xml"
            outputformat="html,txt,xml"
            writeCountsInterval=1
        }
        global {
            coordinateSystem="epsg:26910"
            randomSeed=4711
        }
        households {
            inputFile=${beam.inputDirectory}"/samples/households.xml.gz"
            inputHouseholdAttributesFile=${beam.inputDirectory}"/samples/householdAttributes.xml.gz"
        }
        network {
            inputNetworkFile=${beam.inputDirectory}"/physsim-network.xml"
        }
        parallelEventHandling {
            estimatedNumberOfEvents=10000
            numberOfThreads=1
            oneThreadPerHandler=false
            synchronizeOnSimSteps=false
        }
        planCalcScore {
            BrainExpBeta="2.0"
            earlyDeparture="-0"
            lateArrival="-18"
            learningRate="1.0"
            parameterset=[
                {
                    activityType=Home
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="01:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Work
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="9:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Shopping
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="9:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Social
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="4:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Eatout
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="2:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=School
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="8:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Escort
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="00:30:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=University
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="08:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    activityType=Other
                    priority=1
                    scoringThisActivityAtAll=true
                    type=activityParams
                    typicalDuration="02:00:00"
                    typicalDurationScoreComputation=uniform
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode=car
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode=walk
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode=bike
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode="ride_hailing"
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode="drive_transit"
                    monetaryDistanceRate=0
                    type=modeParams
                },
                {
                    constant=0
                    "marginalUtilityOfDistance_util_m"=0
                    "marginalUtilityOfTraveling_util_hr"=-6
                    mode="walk_transit"
                    monetaryDistanceRate=0
                    type=modeParams
                }
            ]
            performing="6.0"
            traveling="-6.0"
            waiting="-0"
            writeExperiencedPlans=true
        }
        plans {
            inputPersonAttributesFile=${beam.inputDirectory}"/samples/populationAttributes.xml.gz"
            inputPlansFile=${beam.inputDirectory}"/samples/population.xml.gz"
        }
        qsim {
            endTime="30:00:00"
            snapshotperiod="00:00:00"
            startTime="00:00:00"
        }
        strategy {
            "ModuleProbability_1"=0.8
            "ModuleProbability_3"=0.1
            "ModuleProbability_4"=0.1
            "Module_1"=SelectExpBeta
            "Module_3"=ClearRoutes
            "Module_4"=ClearModes
            maxAgentPlanMemorySize=6
        }
        transit {
            transitModes=pt
            useTransit=false
            vehiclesFile=${beam.inputDirectory}"/transitVehicles.xml"
        }
        vehicles {
            vehiclesFile=${beam.inputDirectory}"/samples/vehicles.xml.gz"
        }
    }
}
my-custom-mailbox {
    mailbox-type="akka.dispatch.UnboundedDequeBasedMailbox"
}
router-dispatcher {
    executor=fork-join-executor
    fork-join-executor {
        parallelism-factor=1
        parallelism-max=64
        parallelism-min=2
    }
    throughput=100
    type=Dispatcher
}
