##################################################################
# MATSim Conversion
##################################################################

matsim.conversion {
  scenarioDirectory = "test/intput/siouxfalls"
  populationFile = "Siouxfalls_population.xml"
  matsimNetworkFile = "Siouxfalls_network_PT.xml"
  generateVehicles = true
  vehiclesFile = "Siouxfalls_vehicles.xml"
  defaultHouseholdIncome {
    currency = "usd"
    period = "year"
    value = 50000
  }
  osmFile = "south-dakota-latest.osm.pbf"
  shapeConfig {
    shapeFile = "tz46_d00.shp"
    tazIdFieldName = "TZ46_D00_I"
  }
}

##################################################################
# MATSim Modules
##################################################################

matsim.modules {
  global {
    randomSeed = 1234
    coordinateSystem = "Atlantis"
  }
  network {
    inputNetworkFile = ${beam.inputDirectory}"/physsim-network.xml"
  }
  plans {
    inputPlansFile = ${beam.inputDirectory}"/population.xml"
    inputPersonAttributesFile = ${beam.inputDirectory}"/populationAttributes.xml"
  }
  households {
    inputFile = ${beam.inputDirectory}"/households.xml"
    inputHouseholdAttributesFile = ${beam.inputDirectory}"/householdAttributes.xml"
  }
  strategy {
    maxAgentPlanMemorySize = ${beam.modules.strategy.maxAgentPlanMemorySize}

    ModuleProbability_1 = ${beam.modules.strategy.ModuleProbability_1}
    Module_1 = ${beam.modules.strategy.Module_1}

    ModuleProbability_2 = ${beam.modules.strategy.ModuleProbability_2}
    Module_2 = ${beam.modules.strategy.Module_2}

    ModuleProbability_3 = ${beam.modules.strategy.ModuleProbability_3}
    Module_3 = ${beam.modules.strategy.Module_3}

    ModuleProbability_4 = ${beam.modules.strategy.ModuleProbability_4}
    Module_4 = ${beam.modules.strategy.Module_4}

    #   ModuleProbability_3 = 0.3
    #   Module_3 = "SwitchModalityStyle"
    #   ModuleDisableAfterIteration_3 = 75

    //    ModuleProbability_4 = 0.2
    //    Module_4 = "UtilityBasedModeChoice"
    //    ModuleDisableAfterIteration_4 = 75

    # ModuleProbability_3 = 0.1
    # Module_3 = "TimeAllocationMutator"

    #    ModuleProbability_4 = 0.1
    #    Module_4 = "ChangeTripMode"
  }


  counts {
    countsScaleFactor = 10.355
    averageCountsOverIterations = 0
    writeCountsInterval = ${beam.outputs.defaultWriteInterval}
    outputformat = "all"
  }

  parallelEventHandling {
    #Estimated number of events during mobsim run. An optional optimization hint for the framework.
    estimatedNumberOfEvents = 100
    #Number of threads for parallel events handler. 0 or null means the framework decides by itself.
    numberOfThreads= 1
    #If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental!
    oneThreadPerHandler = false
    # If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used.
    synchronizeOnSimSteps = false
  }
  controler {
    firstIteration = ${beam.agentsim.firstIteration}
    lastIteration = ${beam.agentsim.lastIteration}
    eventsFileFormat = "xml"
    overwriteFiles = "overwriteExistingFiles"
  }
  qsim {
    #"start/endTime" of MobSim (00:00:00 == take earliest activity time/ run as long as active vehicles exist) -->
    startTime=${beam.agentsim.startTime}
    endTime=${beam.agentsim.endTime}
    #00:00:00 means NO snapshot writing
    snapshotperiod = "00:00:00"
  }
  transit {
    useTransit = false
    transitModes = "pt"
  }
  changeMode {
    modes="car,pt"
  }
  planCalcScore {
    writeExperiencedPlans = true
    learningRate = "1.0"
    BrainExpBeta= "2.0"
    lateArrival= "-18"
    earlyDeparture = "-0"
    performing = "6.0"
    traveling="-6.0"
    waiting="-0"

    parameterset = [
      {
        type = "activityParams"
        activityType = "Home"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "01:00:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "activityParams"
        activityType = "Work"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "9:00:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "activityParams"
        activityType = "Shopping"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "9:00:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "activityParams"
        activityType = "Social"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "4:00:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "activityParams"
        activityType = "Eatout"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "2:00:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "activityParams"
        activityType = "School"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "8:00:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "activityParams"
        activityType = "Escort"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "00:30:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "activityParams"
        activityType = "University"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "08:00:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "activityParams"
        activityType = "Other"
        priority = 1.0
        scoringThisActivityAtAll = true
        typicalDuration = "02:00:00"
        typicalDurationScoreComputation = "uniform"
      }, {
        type = "modeParams"
        mode = "car"
        constant = 0.0
        marginalUtilityOfDistance_util_m = 0.0
        marginalUtilityOfTraveling_util_hr = -6.0
        monetaryDistanceRate = 0.0
      }, {
        type = "modeParams"
        mode = "walk"
        constant = 0.0
        marginalUtilityOfDistance_util_m = 0.0
        marginalUtilityOfTraveling_util_hr = -6.0
        monetaryDistanceRate = 0.0
      }, {
        type = "modeParams"
        mode = "bike"
        constant = 0.0
        marginalUtilityOfDistance_util_m = 0.0
        marginalUtilityOfTraveling_util_hr = -6.0
        monetaryDistanceRate = 0.0
      }, {
        type = "modeParams"
        mode = "ride_hail"
        constant = 0.0
        marginalUtilityOfDistance_util_m = 0.0
        marginalUtilityOfTraveling_util_hr = -6.0
        monetaryDistanceRate = 0.0
      }, {
        type = "modeParams"
        mode = "drive_transit"
        constant = 0.0
        marginalUtilityOfDistance_util_m = 0.0
        marginalUtilityOfTraveling_util_hr = -6.0
        monetaryDistanceRate = 0.0
      }, {
        type = "modeParams"
        mode = "walk_transit"
        constant = 0.0
        marginalUtilityOfDistance_util_m = 0.0
        marginalUtilityOfTraveling_util_hr = -6.0
        monetaryDistanceRate = 0.0
      }
    ]
  }
}
