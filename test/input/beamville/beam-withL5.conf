include "beam.conf"

beam.agentsim.simulationName = "rideHail-L5"

beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 0

beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/parking/taz-parking.csv"
beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/vehicleTypes_withL5.csv"
beam.agentsim.agents.rideHail.managers = [
  {
    iterationStats.timeBinSizeInSec = 3600
    defaultCostPerMile = 1.25
    defaultCostPerMinute = 0.75
    rideHailManager.radiusInMeters = 5000
    # allocationManager(DEFAULT_MANAGER | EV_MANAGER | POOLING_ALONSO_MORA)
    allocationManager.name = "POOLING_ALONSO_MORA"
    allocationManager.requestBufferTimeoutInSeconds = 200
    allocationManager.maxWaitingTimeInSec = 900
    allocationManager.maxExcessRideTime = 0.5 # up to +50%
    # ASYNC_GREEDY_VEHICLE_CENTRIC_MATCHING, ALONSO_MORA_MATCHING_WITH_ASYNC_GREEDY_ASSIGNMENT, ALONSO_MORA_MATCHING_WITH_MIP_ASSIGNMENT
    allocationManager.matchingAlgorithm = "ALONSO_MORA_MATCHING_WITH_ASYNC_GREEDY_ASSIGNMENT"
    allocationManager.alonsoMora.maxRequestsPerVehicle = 5
    # repositioningManager can be DEFAULT_REPOSITIONING_MANAGER | DEMAND_FOLLOWING_REPOSITIONING_MANAGER | REPOSITIONING_LOW_WAITING_TIMES | INVERSE_SQUARE_DISTANCE_REPOSITIONING_FACTOR
    repositioningManager.name = "DEMAND_FOLLOWING_REPOSITIONING_MANAGER"
    repositioningManager.timeout = 300
    # DEMAND_FOLLOWING_REPOSITIONING_MANAGER
    repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemand = 1
    repositioningManager.demandFollowingRepositioningManager.numberOfClustersForDemand = 30
    # REPOSITIONING_LOW_WAITING_TIMES
    allocationManager.repositionLowWaitingTimes.percentageOfVehiclesToReposition = 1.0
    allocationManager.repositionLowWaitingTimes.repositionCircleRadiusInMeters = 3000
    allocationManager.repositionLowWaitingTimes.timeWindowSizeInSecForDecidingAboutRepositioning = 1200
    allocationManager.repositionLowWaitingTimes.allowIncreasingRadiusIfDemandInRadiusLow = true
    allocationManager.repositionLowWaitingTimes.minDemandPercentageInRadius = 0.1
    allocationManager.repositionLowWaitingTimes.minimumNumberOfIdlingVehiclesThresholdForRepositioning = 1
    # repositioningMethod(TOP_SCORES | KMEANS)
    allocationManager.repositionLowWaitingTimes.repositioningMethod = "TOP_SCORES"
    allocationManager.repositionLowWaitingTimes.keepMaxTopNScores = 5
    allocationManager.repositionLowWaitingTimes.minScoreThresholdForRepositioning = 0.00001
    allocationManager.repositionLowWaitingTimes.distanceWeight = 0.01
    allocationManager.repositionLowWaitingTimes.waitingTimeWeight = 4.0
    allocationManager.repositionLowWaitingTimes.demandWeight = 4.0
    allocationManager.repositionLowWaitingTimes.produceDebugImages = true
    initialization.filePath=${beam.inputDirectory}"/rideHailFleet_withL5.csv"
    initialization.initType="FILE"
    initialization.parking.filePath=""
  }
]
beam.agentsim.agents.vehicles.meanRidehailVehicleStartingSOC = 0.0
beam.outputs.events.fileOutputFormats = "csv.gz,xml" # valid options: xml(.gz) , csv(.gz), none - DEFAULT: csv.gz

### TO TEST SCALE UP, UNCOMMENT THE FOLLOWING SECTION
# beam.agentsim.agents.vehicles.meanPrivateVehicleStartingSOC = 0.2
# beam.agentsim.agents.vehicles.meanRidehailVehicleStartingSOC = 0.2
# beam.agentsim.chargingNetworkManager {
#   timeStepInSeconds = 300
#   overnightChargingEnabled = true
#   chargingPointCountScalingFactor = 1.0
#   chargingPointCostScalingFactor = 1.0
#   chargingPointFilePath =  ""
#   scaleUp {
#     enabled = true
#     expansionFactor_home_activity = 1000.0
#     expansionFactor_work_activity = 1000.0
#     expansionFactor_charge_activity = 1000.0
#     expansionFactor_wherever_activity = 1000.0
#     expansionFactor_init_activity = 1000.0
#   }
#   helics {
#     connectionEnabled = false
#   }
# }