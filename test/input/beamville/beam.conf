include "../common/akka.conf"
include "../common/metrics.conf"
include "../common/matsim.conf"

##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "beamville"
beam.agentsim.numAgents = 100
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 10
beam.agentsim.thresholdForWalkingInMeters = 100
beam.agentsim.thresholdForMakingParkingChoiceInMeters = 100
beam.agentsim.schedulerParallelismWindow = 30
beam.agentsim.timeBinSize = 3600
beam.agentsim.startTime = "00:00:00"
beam.agentsim.endTime = "30:00:00"

# MODE CHOICE OPTIONS:
# ModeChoiceMultinomialLogit ModeChoiceTransitIfAvailable ModeChoiceDriveIfAvailable ModeChoiceRideHailIfAvailable
# ModeChoiceUniformRandom ModeChoiceLCCM
beam.agentsim.agents.modalBehaviors.modeChoiceClass = "ModeChoiceMultinomialLogit"
beam.agentsim.agents.modalBehaviors.defaultValueOfTime = 8.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.transfer = -1.4
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.car_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_transit_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.drive_transit_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_transit_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_intercept = -1.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_intercept = -3.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_intercept = 0.0
beam.agentsim.agents.modalBehaviors.lccm.paramFile = ${beam.inputDirectory}"/lccm-long.csv"
beam.agentsim.agents.modeIncentive.file = ${beam.inputDirectory}"/incentives.csv"
beam.agentsim.agents.ptFare.file = ${beam.inputDirectory}"/ptFares.csv"
beam.agentsim.agents.plans {
  inputPlansFile = ${beam.inputDirectory}"/population.xml"
  inputPersonAttributesFile = ${beam.inputDirectory}"/populationAttributes.xml"
}
beam.agentsim.agents.households {
  inputFile = ${beam.inputDirectory}"/households.xml"
  inputHouseholdAttributesFile = ${beam.inputDirectory}"/householdAttributes.xml"
}
#BeamVehicles Params
beam.agentsim.agents.vehicles.beamFuelTypesFile = ${beam.inputDirectory}"/beamFuelTypes.csv"
beam.agentsim.agents.vehicles.beamVehicleTypesFile = ${beam.inputDirectory}"/vehicleTypes.csv"
beam.agentsim.agents.vehicles.beamVehiclesFile = ${beam.inputDirectory}"/vehicles.csv"
beam.agentsim.agents.vehicles.bicycles.useBikes=false
# Population Adjustmnet (DEFAULT_ADJUSTMENT | PERCENTAGE_ADJUSTMENT)
beam.agentsim.populationAdjustment="DEFAULT_ADJUSTMENT"
#Toll params
beam.agentsim.toll.file=${beam.inputDirectory}"/toll-prices.csv"
#TAZ params
beam.agentsim.taz.file=${beam.inputDirectory}"/taz-centers.csv"
beam.agentsim.taz.parking = ${beam.inputDirectory}"/parking/taz-parking-default.csv"
# Scaling and Tuning Params
beam.agentsim.tuning.transitCapacity = 0.1
beam.agentsim.tuning.transitPrice = 1.0
beam.agentsim.tuning.tollPrice = 1.0
beam.agentsim.tuning.rideHailPrice = 1.0
###########################
# Physsim
###########################
beam.physsim.inputNetworkFile = ${beam.inputDirectory}"/physsim-network.xml"
beam.physsim.flowCapacityFactor = 0.0001
beam.physsim.storageCapacityFactor = 0.0001
beam.physsim.writeMATSimNetwork = false
beam.physsim.ptSampleSize = 1.0
beam.physsim.jdeqsim.agentSimPhysSimInterfaceDebugger.enabled = false
beam.physsim.skipPhysSim = false

###########################
# Replanning
###########################
beam.replanning{
  maxAgentPlanMemorySize = 4
  Module_1 = "SelectExpBeta"
  ModuleProbability_1 = 0.7
  Module_2 = "ClearRoutes"
  ModuleProbability_2 = 0.1
  Module_3 = "ClearModes"
  ModuleProbability_3 = 0.1
  Module_4 = "TimeMutator"
  ModuleProbability_4 = 0.1
}
##################################################################
# Warm Mode
##################################################################
beam.warmStart.enabled = false
beam.warmStart.path = "https://s3.us-east-2.amazonaws.com/beam-outputs/run149-base__2018-06-27_20-28-26_2a2e2bd3.zip"

##################################################################
# RideHail
##################################################################
# Initialization Type(PROCEDURAL | FILE)
beam.agentsim.agents.rideHail.initialization.initType = "FILE"
# If PROCEDURAL, use these params
# initialization.procedural.initialLocation.name(INITIAL_RIDE_HAIL_LOCATION_HOME | INITIAL_RIDE_HAIL_LOCATION_UNIFORM_RANDOM | INITIAL_RIDE_HAIL_LOCATION_ALL_AT_CENTER | INITIAL_RIDE_HAIL_LOCATION_ALL_IN_CORNER)
beam.agentsim.agents.rideHail.initialization.procedural.initialLocation.name = "INITIAL_RIDE_HAIL_LOCATION_HOME"
beam.agentsim.agents.rideHail.initialization.procedural.initialLocation.home.radiusInMeters = 500
beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypeId="Car"
# If FILE, use this param
beam.agentsim.agents.rideHail.initialization.filename=${beam.inputDirectory}"/rideHailFleet.csv"
# Ride Hail Transit Modes: Options are ALL, MASS, or the individual modes comma separate, e.g. BUS,TRAM
beam.agentsim.agents.rideHailTransit.modesToConsider="MASS"
beam.agentsim.agents.rideHail.defaultCostPerMile=1.25
beam.agentsim.agents.rideHail.defaultCostPerMinute=0.75
beam.agentsim.agents.rideHail.refuelThresholdInMeters=5000.0
beam.agentsim.agents.rideHail.rideHailManager.radiusInMeters=5000
beam.agentsim.agents.rideHail.iterationStats.timeBinSizeInSec=3600
beam.agentsim.agents.rideHail.refuelLocationType="AtRequestLocation"
# SurgePricing parameters
beam.agentsim.agents.rideHail.surgePricing.surgeLevelAdaptionStep=0.1
beam.agentsim.agents.rideHail.surgePricing.minimumSurgeLevel=0.1
# priceAdjustmentStrategy(KEEP_PRICE_LEVEL_FIXED_AT_ONE | CONTINUES_DEMAND_SUPPLY_MATCHING)
beam.agentsim.agents.rideHail.surgePricing.priceAdjustmentStrategy="KEEP_PRICE_LEVEL_FIXED_AT_ONE"
# allocationManager(DEFAULT_MANAGER | RANDOM_REPOSITIONING | REPOSITIONING_LOW_WAITING_TIMES | EV_MANAGER)
beam.agentsim.agents.rideHail.allocationManager.name="DEFAULT_MANAGER"
beam.agentsim.agents.rideHail.allocationManager.repositionTimeoutInSeconds = 0
beam.agentsim.agents.rideHail.allocationManager.requestBufferTimeoutInSeconds = 0
beam.agentsim.agents.rideHail.allocationManager.randomRepositioning.repositioningShare=0.2
# REPOSITIONING_LOW_WAITING_TIMES
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.percentageOfVehiclesToReposition=1.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.repositionCircleRadiusInMeters = 3000
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.timeWindowSizeInSecForDecidingAboutRepositioning=1200
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.allowIncreasingRadiusIfDemandInRadiusLow=true
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minDemandPercentageInRadius=0.1
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minimumNumberOfIdlingVehiclesThresholdForRepositioning = 1
# repositioningMethod(TOP_SCORES | KMEANS)
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.repositioningMethod="TOP_SCORES"
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.keepMaxTopNScores=5
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minScoreThresholdForRepositioning=0.00001
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.distanceWeight=0.01
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.waitingTimeWeight=4.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.demandWeight=4.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.produceDebugImages=true
beam.physsim.quick_fix_minCarSpeedInMetersPerSecond = 0.0
##################################################################
# OUTPUTS
##################################################################
# The outputDirectory is the base directory where outputs will be written. The beam.agentsim.simulationName param will
# be used as the name of a sub-directory beneath the baseOutputDirectory for simulation results.
# If addTimestampToOutputDirectory == true, a timestamp will be added, e.g. "beamville_2017-12-18_16-48-57"
beam.outputs.baseOutputDirectory = "output/beamville"
beam.outputs.baseOutputDirectory = ${?BEAM_OUTPUT}
beam.outputs.addTimestampToOutputDirectory = true

# To keep all logging params in one place, BEAM overrides MATSim params normally in the controller config module
beam.outputs.defaultWriteInterval = 1
beam.outputs.writePlansInterval = ${beam.outputs.defaultWriteInterval}
beam.outputs.writeEventsInterval = ${beam.outputs.defaultWriteInterval}
beam.physsim.writeEventsInterval = ${beam.outputs.defaultWriteInterval}
beam.physsim.writePlansInterval = ${beam.outputs.defaultWriteInterval}
beam.outputs.writeLinkTraversalInterval = 0
beam.physsim.linkStatsWriteInterval = 0

# The remaining params customize how events are written to output files
beam.outputs.events.fileOutputFormats = "csv,xml" # valid options: xml(.gz) , csv(.gz), none - DEFAULT: csv.gz

# Events Writing Logging Levels:
# Any event types not explicitly listed in overrideWritingLevels take on defaultWritingLevel
beam.outputs.events.eventsToWrite = "ActivityEndEvent,ActivityStartEvent,PersonEntersVehicleEvent,PersonLeavesVehicleEvent,ModeChoiceEvent,PathTraversalEvent,ReserveRideHailEvent,ReplanningEvent,RefuelEvent,ParkEvent,LeavingParkingEvent,PersonCostEvent,AgencyRevenueEvent"
beam.outputs.stats.binSize = 3600
##################################################################
# Debugging
##################################################################
beam.debug.debugEnabled = true
beam.debug.debugActorTimerIntervalInSec = 60
beam.debug.actor.logDepth = 12

beam.debug.stuckAgentDetection {
  enabled = false
  thresholds = []
}
##################################################################
# SPATIAL
##################################################################
beam.spatial = {
  localCRS = "epsg:32631"  # what crs to use for distance calculations, must be in units of meters
  boundingBoxBuffer = 10000 # meters of buffer around network for defining extend of spatial indices
}

##################################################################
# BEAM ROUTING SERVICE
##################################################################
beam.routing {
  #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  baseDate = "2016-10-17T00:00:00-07:00"
  transitOnStreetNetwork = true # PathTraversalEvents for transit vehicles
  r5 {
    directory = ${beam.inputDirectory}"/r5"
    # Departure window in min
    departureWindow = 1.0167
    osmFile = ${beam.inputDirectory}"/r5/beamville.osm.pbf"
    osmMapdbFile = ${beam.inputDirectory}"/r5/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
  }
}
##################################################################
# Calibration
##################################################################
beam.calibration.objectiveFunction = "ModeChoiceObjectiveFunction"
beam.calibration.mode.benchmarkFileLoc=${beam.inputDirectory}"/calibration/benchmark.csv"
beam.calibration.counts {
  countsScaleFactor = 10.355
  writeCountsInterval = 0
  averageCountsOverIterations = ${beam.outputs.defaultWriteInterval}
}

