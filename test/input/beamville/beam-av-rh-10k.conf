include "beam.conf"

beam.physsim.name = "AV RH beamville 10k"
beam.agentsim.endTime = "24:00:00"

# base config
matsim.modules.global.randomSeed = 654154
beam.outputs.events.fileOutputFormats = xml
beam.physsim.skipPhysSim = true
beam.agentsim.lastIteration = 0
beam.agentsim.agents.vehicles.sharedFleets = []
beam.agentsim.taz.filePath=${beam.inputDirectory}"/../../test-resources/ElectricVehicleChargingBehaviorTestData/taz-centers.csv"

# rideHailConfig
beam.agentsim.agents.rideHail.managers = [
  {
    iterationStats.timeBinSizeInSec = 3600
    defaultCostPerMile = 1.25
    defaultCostPerMinute = 0.75
    rideHailManager.radiusInMeters = 50000
    # allocationManager(DEFAULT_MANAGER | EV_MANAGER | POOLING_ALONSO_MORA)
    allocationManager.name = "POOLING_ALONSO_MORA"
    allocationManager.requestBufferTimeoutInSeconds = 200
    allocationManager.maxWaitingTimeInSec = 18000
    allocationManager.maxExcessRideTime = 0.5 # up to +50%
    allocationManager.matchingAlgorithm = "ALONSO_MORA_MATCHING_WITH_ASYNC_GREEDY_ASSIGNMENT"
    allocationManager.alonsoMora.maxRequestsPerVehicle = 5
    repositioningManager.name = "DEMAND_FOLLOWING_REPOSITIONING_MANAGER"
    repositioningManager.timeout = 300
    # DEMAND_FOLLOWING_REPOSITIONING_MANAGER
    repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemand = 1
    repositioningManager.demandFollowingRepositioningManager.numberOfClustersForDemand = 30
    # REPOSITIONING_LOW_WAITING_TIMES
    allocationManager.repositionLowWaitingTimes.percentageOfVehiclesToReposition = 0.0
    allocationManager.repositionLowWaitingTimes.repositionCircleRadiusInMeters = 100
    allocationManager.repositionLowWaitingTimes.timeWindowSizeInSecForDecidingAboutRepositioning = 12000
    allocationManager.repositionLowWaitingTimes.allowIncreasingRadiusIfDemandInRadiusLow = true
    allocationManager.repositionLowWaitingTimes.minDemandPercentageInRadius = 0.1
    allocationManager.repositionLowWaitingTimes.minimumNumberOfIdlingVehiclesThresholdForRepositioning = 1000
    allocationManager.repositionLowWaitingTimes.repositioningMethod = "TOP_SCORES"
    allocationManager.repositionLowWaitingTimes.keepMaxTopNScores = 5
    allocationManager.repositionLowWaitingTimes.minScoreThresholdForRepositioning = 100000000.0
    allocationManager.repositionLowWaitingTimes.distanceWeight = 0.01
    allocationManager.repositionLowWaitingTimes.waitingTimeWeight = 4.0
    allocationManager.repositionLowWaitingTimes.demandWeight = 4.0
    allocationManager.repositionLowWaitingTimes.produceDebugImages = true
    initialization.filePath = ${beam.inputDirectory}"/../../test-resources/AVRH/10k/rideHailFleet.csv"
    initialization.initType="FILE"
    initialization.parking.filePath=${beam.inputDirectory}"/../../test-resources/ElectricVehicleChargingBehaviorTestData/taz-parking-empty.csv"
  }
]
beam.agentsim.agents.plans {
  inputPlansFilePath = ${beam.inputDirectory}"/../../test-resources/AVRH/10k/population.xml"
  inputPersonAttributesFilePath = ${beam.inputDirectory}"/../../test-resources/AVRH/10k/populationAttributes.xml"
}
beam.agentsim.agents.households {
  inputFilePath = ${beam.inputDirectory}"/../../test-resources/AVRH/10k/households.xml"
  inputHouseholdAttributesFilePath = ${beam.inputDirectory}"/../../test-resources/AVRH/10k/householdAttributes.xml"
}
beam.agentsim.agents.vehicles.vehiclesFilePath = ${beam.inputDirectory}"/../../test-resources/ElectricVehicleChargingBehaviorTestData/vehicles-empty.csv"
beam.agentsim.agents.parking.minSearchRadius = 8000

# test config
beam.agentsim.agents.plans.inputPlansFilePath = ${beam.inputDirectory}"/../../test-resources/AVRH/10k/population.xml"
beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/../../test-resources/ElectricVehicleChargingBehaviorTestData/taz-parking-ride-hail-driving-time-cost.csv"
# 15 Km range
#beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/../../test-resources/ElectricVehicleChargingBehaviorTestData/vehicleTypes-low-capacity.csv"
beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/../../test-resources/AVRH/vehicleTypes-60km-range.csv"
#beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/vehicleTypes_withL5.csv"
beam.agentsim.agents.rideHail.charging.multinomialLogit.params.drivingTimeMultiplier = -0.01666667 # default
# initial SoC is 0.7 or 10.5 Km, vehicles should immediately pick a charging station
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_intercept = 0
#beam.agentsim.agents.rideHail.human.refuelRequiredThresholdInMeters = 11000.0
#beam.agentsim.agents.rideHail.human.noRefuelThresholdInMeters = 12000.0
#beam.agentsim.agents.rideHail.cav.refuelRequiredThresholdInMeters = 11000.0
#beam.agentsim.agents.rideHail.cav.noRefuelThresholdInMeters = 12000.0
#beam.agentsim.agents.rideHail.rangeBufferForDispatchInMeters = 0