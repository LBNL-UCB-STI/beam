include "sf-light.conf"

beam.agentsim.simulationName = "sf-light-urbansim-hh5k"
beam.agentsim.lastIteration = 0
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 1.0


beam.agentsim.taz.filePath=${beam.inputDirectory}"/shape/sf-light-modern-taz.shp"
beam.agentsim.taz.tazIdFieldName = "taz1454"
beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/parking/parking-modern-taz.csv.gz"

beam.physsim.flowCapacityFactor = 0.08
beam.physsim.skipPhysSim = true
beam.physsim.name = "PARBPRSim"
beam.outputs.defaultWriteInterval=1
beam.router.skim.writeSkimsInterval = 1

beam.exchange.scenario {
  source = "urbansim_v2"
  # Input file format for scenario loader can be "csv" or "parquet"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/urbansim/hh5k"
  convertWgs2Utm = true
  modeMap = [
    "BIKE           -> bike",
    "DRIVEALONEFREE -> car",
    "DRIVEALONEPAY  -> car",
    "DRIVE_COM      -> drive_transit",
    "DRIVE_EXP      -> drive_transit",
    "DRIVE_HVY      -> drive_transit",
    "DRIVE_LOC      -> drive_transit",
    "DRIVE_LRF      -> drive_transit",
    "SHARED2FREE    -> hov2",
    "SHARED2PAY     -> hov2",
    "SHARED3FREE    -> hov3",
    "SHARED3PAY     -> hov3",
    "TAXI           -> ride_hail",
    "TNC_SHARED     -> ride_hail_pooled",
    "TNC_SINGLE     -> ride_hail",
    "WALK           -> walk",
    "WALK_COM       -> walk_transit",
    "WALK_EXP       -> walk_transit",
    "WALK_HVY       -> walk_transit",
    "WALK_LOC       -> walk_transit",
    "WALK_LRF       -> walk_transit",
  ]
}
