include "../common/akka.conf"
include "../common/akka-router.conf"
include "../common/metrics.conf"
include "../common/matsim.conf"

# This version, base-sf-light.conf, is configured to use a subsample of the population located in:
#  ${beam.inputDirectory}"/sample"
##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "sf-light-25k"
beam.agentsim.numAgents = 25000
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 5
//beam.agentsim.numAgents = 100
beam.agentsim.thresholdForWalkingInMeters = 1000
beam.agentsim.schedulerParallelismWindow = 30
beam.agentsim.timeBinSize = 3600
beam.agentsim.startTime = "00:00:00"
beam.agentsim.endTime = "30:00:00"
# MODE CHOICE OPTIONS:
# ModeChoiceMultinomialLogit ModeChoiceTransitIfAvailable ModeChoiceDriveIfAvailable ModeChoiceRideHailIfAvailable
# ModeChoiceUniformRandom ModeChoiceLCCM
beam.agentsim.agents.modalBehaviors.modeChoiceClass = "ModeChoiceMultinomialLogit"
beam.agentsim.agents.modalBehaviors.defaultValueOfTime = 8.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.transfer = -1.4
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.car_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_transit_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.drive_transit_intercept = 1.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_transit_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_intercept = 1.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_pooled_intercept = -100.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_intercept = -2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_intercept = 0.0
beam.agentsim.agents.modalBehaviors.lccm.paramFile = ${beam.inputDirectory}"/lccm-long.csv"
beam.agentsim.agents.plans {
  inputPlansFile = ${beam.inputDirectory}"/sample/25k/population.xml.gz"
  inputPersonAttributesFile = ${beam.inputDirectory}"/sample/25k/populationAttributes.xml.gz"
}
beam.agentsim.agents.households {
  inputFile = ${beam.inputDirectory}"/sample/25k/households.xml.gz"
  inputHouseholdAttributesFile = ${beam.inputDirectory}"/sample/25k/householdAttributes.xml.gz"
}
#BeamVehicles Params
beam.agentsim.agents.vehicles.beamFuelTypesFile = ${beam.inputDirectory}"/beamFuelTypes.csv"
beam.agentsim.agents.vehicles.beamVehicleTypesFile = ${beam.inputDirectory}"/sample/25k/vehicleTypes.csv"
beam.agentsim.agents.vehicles.beamVehiclesFile = ${beam.inputDirectory}"/sample/25k/vehicles.csv"
beam.agentsim.agents.vehicles.bicycles.useBikes=false
#TAZ params
beam.agentsim.taz.file=${beam.inputDirectory}"/taz-centers.csv.gz"
beam.agentsim.taz.parking = ${beam.inputDirectory}"/taz-parking-limited.csv"
#Toll params
beam.agentsim.toll.file=${beam.inputDirectory}"/toll-prices.csv"
# Scaling and Tuning Params
beam.agentsim.tuning.transitCapacity = 0.5
beam.agentsim.tuning.transitPrice = 1.0
beam.agentsim.tuning.tollPrice = 1.0
beam.agentsim.tuning.rideHailPrice = 1.0
###########################
# Physsim
###########################
beam.physsim.inputNetworkFile = ${beam.inputDirectory}"/r5/physsim-network.xml"
beam.physsim.flowCapacityFactor = 0.05
beam.physsim.storageCapacityFactor = 1.00
beam.physsim.writeEventsInterval = 10
beam.physsim.writePlansInterval = 10
beam.physsim.writeMATSimNetwork = false
beam.physsim.linkStatsWriteInterval = 10
beam.physsim.linkStatsBinSize = 3600
beam.physsim.ptSampleSize = 0.003
beam.physsim.jdeqsim.agentSimPhysSimInterfaceDebugger.enabled = false

###########################
# Replanning
###########################
beam.replanning{
  maxAgentPlanMemorySize = 4
  planSelectorForRemoval="WorstPlanSelector"
  Module_1 = "SelectExpBeta"
  ModuleProbability_1 = 0.8
  Module_2 = "ClearRoutes"
  ModuleProbability_2 = 0.1
  Module_3 = "ClearModes"
  ModuleProbability_3 = 0.1
  Module_4 = "TimeMutator"
  ModuleProbability_4 = 0.1
}

##################################################################
# Warm Mode
##################################################################
beam.warmStart.enabled = false
#PATH TYPE OPTIONS: PARENT_RUN, ABSOLUTE_PATH
#PARENT_RUN: can be a director or zip archive of the output directory (e.g. like what get's stored on S3). We should also be able to specify a URL to an S3 output.
#ABSOLUTE_PATH: a directory that contains required warm stats files (e.g. linkstats and eventually a plans).
beam.warmStart.path = "/Users/critter/Documents/beam/beam-output/WARM-sf-light-25k__2018-12-12_17-47-01/"
##################################################################
# RideHail
##################################################################
# Ride Hailing General Params
beam.agentsim.agents.rideHail.numDriversAsFractionOfPopulation= 0.077
beam.agentsim.agents.rideHail.defaultCostPerMile=1.25
beam.agentsim.agents.rideHail.defaultCostPerMinute=0.75
beam.agentsim.agents.rideHail.vehicleTypeId="Car"
beam.agentsim.agents.rideHail.refuelThresholdInMeters=10000.0
beam.agentsim.agents.rideHail.rideHailManager.radiusInMeters=5000
beam.agentsim.agents.rideHail.iterationStats.timeBinSizeInSec=3600
# SurgePricing parameters
beam.agentsim.agents.rideHail.surgePricing.surgeLevelAdaptionStep=0.1
beam.agentsim.agents.rideHail.surgePricing.minimumSurgeLevel=0.1
# priceAdjustmentStrategy(KEEP_PRICE_LEVEL_FIXED_AT_ONE | CONTINUES_DEMAND_SUPPLY_MATCHING)
beam.agentsim.agents.rideHail.surgePricing.priceAdjustmentStrategy="KEEP_PRICE_LEVEL_FIXED_AT_ONE"
# initialLocation(HOME | UNIFORM_RANDOM | ALL_AT_CENTER | ALL_IN_CORNER)
beam.agentsim.agents.rideHail.initialLocation.name="HOME"
beam.agentsim.agents.rideHail.initialLocation.home.radiusInMeters=10000
# allocationManager(DEFAULT_MANAGER | STANFORD_V1 | BUFFERED_IMPL_TEMPLATE | RANDOM_REPOSITIONING | REPOSITIONING_LOW_WAITING_TIMES )
beam.agentsim.agents.rideHail.allocationManager.name="DEFAULT_MANAGER"
beam.agentsim.agents.rideHail.allocationManager.randomRepositioning.repositioningShare=0.2
# REPOSITIONING_LOW_WAITING_TIMES
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.percentageOfVehiclesToReposition=0.01
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.timeWindowSizeInSecForDecidingAboutRepositioning=1200
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.allowIncreasingRadiusIfDemandInRadiusLow=true
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minDemandPercentageInRadius=0.1
# repositioningMethod(TOP_SCORES | KMEANS)
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.repositioningMethod="TOP_SCORES"
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.keepMaxTopNScores=1
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minScoreThresholdForRepositioning=0.1
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.distanceWeight=0.01
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.waitingTimeWeight=4.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.demandWeight=4.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.produceDebugImages=true

# Population Adjustmnet (DEFAULT_ADJUSTMENT | PERCENTAGE_ADJUSTMENT)
beam.agentsim.populationAdjustment="DEFAULT_ADJUSTMENT"

##################################################################
# OUTPUTS
##################################################################
# The baseOutputDirectory is the base directory where outputs will be written. The beam.agentsim.simulationName param will
# be used as the name of a sub-directory beneath the baseOutputDirectory for simulation results.
# If addTimestampToOutputDirectory == true, a timestamp will be added, e.g. "beamville_2017-12-18_16-48-57"
beam.outputs.baseOutputDirectory = ${PWD}"/output/sf-light"
beam.outputs.baseOutputDirectory = ${?BEAM_OUTPUT}
beam.outputs.addTimestampToOutputDirectory = true

# To keep all logging params in one place, BEAM overrides MATSim params normally in the controller config module
beam.outputs.writePlansInterval = 1
beam.outputs.writeEventsInterval = 1
beam.outputs.writeLinkTraversalInterval = 0

# The remaining params customize how events are written to output files
beam.outputs.events.fileOutputFormats = "csv.gz" # valid options: xml(.gz) , csv(.gz), none - DEFAULT: csv.gz

# Events Writing Logging Levels:
# Any event types not explicitly listed in overrideWritingLevels take on defaultWritingLevel
beam.outputs.events.eventsToWrite = "ActivityEndEvent,ActivityStartEvent,PersonEntersVehicleEvent,PersonLeavesVehicleEvent,ModeChoiceEvent,PathTraversalEvent,ReserveRideHailEvent,RefuelEvent"
beam.outputs.stats.binSize = 3600
##################################################################
# Debugging
##################################################################
beam.debug.debugEnabled = true
beam.debug.actor.logDepth = 10

beam.debug.stuckAgentDetection {
  enabled = false
  thresholds = [
    {
      triggerType = "beam.agentsim.agents.PersonAgent$ActivityStartTrigger"
      markAsStuckAfterMs = "20s"
      actorTypeToMaxNumberOfMessages {
        population = 1
      }
    },
    {
      triggerType = "beam.agentsim.agents.PersonAgent$ActivityEndTrigger"
      markAsStuckAfterMs = "60s"
      actorTypeToMaxNumberOfMessages {
        population = 15
      }
    },
    {
      triggerType = "beam.agentsim.agents.PersonAgent$PersonDepartureTrigger"
      markAsStuckAfterMs = "20s"
      actorTypeToMaxNumberOfMessages {
        population = 20
      }
    },
    {
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$StartLegTrigger"
      markAsStuckAfterMs = "18s"
      actorTypeToMaxNumberOfMessages {
        population = 60
        transitDriverAgent = 150
        rideHailAgent = 250
      }
    },
    {
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$EndLegTrigger"
      markAsStuckAfterMs = "60s"
      actorTypeToMaxNumberOfMessages {
        population = 60
        transitDriverAgent = 150
        rideHailAgent = 250
      }
    },
    {
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$AlightVehicleTrigger"
      markAsStuckAfterMs = "21s"
      actorTypeToMaxNumberOfMessages {
        population = 20
      }
    },
    {
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$BoardVehicleTrigger"
      markAsStuckAfterMs = "21s"
      actorTypeToMaxNumberOfMessages {
        population = 20
      }
    },
    {
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$StartRefuelTrigger"
      markAsStuckAfterMs = "21s"
      actorTypeToMaxNumberOfMessages {
        rideHailAgent = 10
      }
    },
    {
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$EndRefuelTrigger"
      markAsStuckAfterMs = "21s"
      actorTypeToMaxNumberOfMessages {
        rideHailAgent = 10
      }
    },
    {
      triggerType = "beam.agentsim.agents.InitializeTrigger"
      markAsStuckAfterMs = "20s"
      actorTypeToMaxNumberOfMessages {
        population = 1
        transitDriverAgent = 1
        rideHailAgent = 1
        rideHailManager = 1
      }
    },
    {
      triggerType = "beam.agentsim.agents.ridehail.RideHailManager$BufferedRideHailRequestsTrigger"
      markAsStuckAfterMs = "20s"
      actorTypeToMaxNumberOfMessages {
        rideHailManager = 108000 // 30 hours * 3600 seconds per hour
      }
    },
    {
      triggerType = "beam.agentsim.agents.ridehail.RideHailManager$RideHailRepositioningTrigger"
      markAsStuckAfterMs = "40s"
      actorTypeToMaxNumberOfMessages {
        rideHailManager = 361
      }
    },
  ]
}
##################################################################
# SPATIAL
##################################################################
beam.spatial = {
  localCRS = "epsg:26910"  # what crs to use for distance calculations, must be in units of meters
  boundingBoxBuffer = 10000 # meters of buffer around network for defining extend of spatial indices
}

##################################################################
# BEAM ROUTING SERVICE
##################################################################
beam.routing {
  routerClass = "beam.router.r5.R5RoutingWorker"
  #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  baseDate = "2017-09-22T00:00:00-07:00"
  transitOnStreetNetwork = true # PathTraversalEvents for transit vehicles
  r5 {
    directory = ${beam.inputDirectory}"/r5"
    # Departure window in min
    departureWindow = 1.0167
    osmFile = ${beam.inputDirectory}"/r5/sf-light.osm.pbf"
    osmMapdbFile = ${beam.inputDirectory}"/r5/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS =  ${beam.spatial.localCRS}
  }
}
##################################################################
# Calibration
##################################################################
beam.calibration.objectiveFunction = "ModeChoiceObjectiveFunction"
beam.calibration.mode.benchmarkFileLoc=${beam.inputDirectory}"/sf-light-calibration/benchmark.csv"
beam.calibration.counts {
  countsScaleFactor = 106.47
  writeCountsInterval = 1
  averageCountsOverIterations = 1
  inputCountsFile = ${beam.inputDirectory}"/counts/fall_2015_wed_filtered.xml"
}
