include "sf-light-1k.conf"

beam.agentsim.simulationName = "rh-transit-mode"

beam.agentsim.lastIteration = 0
beam.agentsim.endTime = "30:00:00"

beam.debug.messageLogging = false

#beam.physsim.flowCapacityFactor = 1.0
beam.physsim.writeEventsInterval = 1
beam.physsim.linkStatsWriteInterval = 1
beam.physsim.skipPhysSim = true
# beam.physsim.eventManager.type = "sequential"
# values: JDEQSim, BPRSim, PARBPRSim, CCHRoutingAssignment
# beam.physsim.name = "BPRSim"
#beam.physsim.ptSampleSize = 0
beam.physsim.writePlansInterval = 1.0

#beam.routing.carRouter="nativeCCH"
#beam.routing.carRouter="staticGH"
beam.routing.writeRoutingStatistic = false

beam.router.skim.writeSkimsInterval = 1
beam.router.skim.writeAggregatedSkimsInterval = 1
beam.outputs.writeEventsInterval = 1

beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/taz-parking.csv"
inputPlansFilePath = ${beam.inputDirectory}"/sample/1k/population.xml"
beam.agentsim.agents.modalBehaviors.maximumNumberOfReplanningAttempts = 1

# beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/link-parking-my.csv"
# beam.agentsim.taz.parkingManager.method = "HIERARCHICAL"
#beam.agentsim.taz.parkingManager.level = "Link"
beam.cfg.copyRideHailToFirstManager = true
#beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 0.005
#beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemand = 20
#beam.agentsim.agents.rideHail.pooledBaseCost = 1.8
#beam.agentsim.agents.rideHail.pooledCostPerMile = 0.9
#beam.agentsim.agents.rideHail.pooledCostPerMinute = 0.07

#beam.agentsim.agents.rideHail.stopFilePath=${beam.inputDirectory}"/ridehail-stops.csv"
#beam.agentsim.agents.rideHail.maximumWalkDistanceToStopInM = 2000.0
#beam.agentsim.agents.rideHail.allocationManager.name = "DEFAULT_MANAGER"
beam.agentsim.agents.rideHail.allocationManager.requestBufferTimeoutInSeconds = 1800
beam.agentsim.agents.rideHail.allocationManager.maxWaitingTimeInSec = 3600
beam.agentsim.agents.rideHail.allocationManager.maxExcessRideTime = 3


#beam.agentsim.agents.modalBehaviors.multinomialLogit.params.drive_transit_intercept = 5
#beam.agentsim.agents.modalBehaviors.multinomialLogit.params.bike_transit_intercept = 5
#beam.agentsim.agents.modalBehaviors.multinomialLogit.params.car_intercept = 5
#beam.agentsim.agents.modalBehaviors.multinomialLogit.params.walk_transit_intercept = 10
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_transit_intercept = 50
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_intercept = -10
beam.agentsim.agents.modalBehaviors.multinomialLogit.params.ride_hail_pooled_intercept = -10

#beam.warmStart.type = "full"
#beam.warmStart.path = "output/sf-light/plain-sf-light-warmstart.zip"
#beam.warmStart.path = "output/sf-light/free_od_skims_warmstart.zip"

#beam.agentsim.agents.modeChoice.useSkimsStartingFromIteration = 999
# Modes to use with skims i.e.
#beam.agentsim.agents.modeChoice.useSkimsForModes = ["ride_hail_pooled", "ride_hail", "ride_hail_transit", "walk_transit", "drive_transit", "bike_transit"]

#beam.sim.termination.criterionName = "TerminateAtRideHailFleetStoredElectricityConvergence"
#beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.minLastIteration = 0
#beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.maxLastIteration = 50
#beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.relativeTolerance = 0.01
#beam.agentsim.agents.rideHail.linkFleetStateAcrossIterations = true
#beam.agentsim.agents.vehicles.linkSocAcrossIterations = true
#beam.debug.vmInformation.createGCClassHistogram = true
#beam.debug.vmInformation.writeHeapDump = true