include "sf-light.conf"

# in order to change population size and increase execution speed
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 0.1

beam.agentsim.firstIteration = 0

# reposition does not work at iteration 0
beam.agentsim.lastIteration = 1

# don't skipPhysSim
beam.physsim.skipPhysSim = false

#generate second activity
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.generate_secondary_activities = true
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.max_destination_distance_meters = 100.0

##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "100shared-bikes-baseline-with-reposition"

beam.physsim.skipPhysSim = true

beam.debug {
  debugEnabled = false
  vmInformation.createGCClassHistogram = false
  writeModeChoiceAlternatives = false
}
#activity sim
##we use plans from activitysim
beam.input.lastBaseOutputDir = ${beam.outputs.baseOutputDirectory}
beam.input.simulationPrefix = ${beam.agentsim.simulationName}
beam.agentsim.agents.plans.merge.fraction = 0.2
beam.warmStart.type = "linkStatsFromLastRun"

#mode choice parameters
beam.agentsim.agents.modalBehaviors.modeChoiceClass = "ModeChoiceMultinomialLogit"
beam.agentsim.agents.modalBehaviors.defaultValueOfTime = 8.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.transfer = -1.4
##we set car intercept to be 0 now
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.car_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_transit_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.drive_transit_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_transit_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_intercept = -1.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_intercept = -3.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_intercept = 0.0

#sampling
beam.agentsim.numAgents = 100

# Ride Hailing Params
beam.agentsim.agents.rideHail.initialization.procedural.numDriversAsFractionOfPopulation=0.05
beam.agentsim.agents.rideHail.defaultCostPerMile=1.25
beam.agentsim.agents.rideHail.defaultCostPerMinute=0.75
# Scaling and Tuning Params; 1.0 results in no scaling
beam.agentsim.tuning.transitCapacity = 0.2
beam.agentsim.tuning.transitPrice = 1.0
beam.agentsim.tuning.tollPrice = 1.0
beam.agentsim.tuning.rideHailPrice = 1.0

##for shared-bikes
beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/vehicleTypes.csv"
beam.agentsim.agents.vehicles.fractionOfPeopleWithBicycle=0.1
beam.agentsim.agents.vehicles.dummySharedBike.vehicleTypeId = "sharedVehicle-FAST-BIKE"


#beame.agentsim.agents.Vehicles.SharedFleets.reposition = "min-availability-observed-algorithm"


beam.agentsim.agents.vehicles.sharedFleets = [
  {
    name = "bay_wheels"
    managerType = "fixed-non-reserving-fleet-by-taz"
    parkingFilePath = ${beam.inputDirectory}"/parking/shared-bike-parking-hubs-test.csv"

    #@optional
    fixed-non-reserving-fleet-by-taz {
      vehicleTypeId = "sharedVehicle-FAST-BIKE",
      vehiclesSharePerTAZFromCSV = ${beam.inputDirectory}"/parking/shared-bike-initial-test.csv",
      maxWalkingDistance = 500,
      fleetSize = 15000
    }


    beam.exchange.scenario {
      # source for now can be "MATSim" or "UrbanSim"
      source = "urbansim_v2"
      # Input file format for scenario loader can be "csv" or "parquet"
      fileFormat = "csv"
      folder = ${beam.inputDirectory}"/activitysim"
      convertWgs2Utm = true
      modeMap = [
        "BIKE           -> bike",
        "DRIVEALONEFREE -> car",
        "DRIVEALONEPAY  -> car",
        "DRIVE_COM      -> drive_transit",
        "DRIVE_EXP      -> drive_transit",
        "DRIVE_HVY      -> drive_transit",
        "DRIVE_LOC      -> drive_transit",
        "DRIVE_LRF      -> drive_transit",
        "SHARED2FREE    -> car",
        "SHARED2PAY     -> car",
        "SHARED3FREE    -> car",
        "SHARED3PAY     -> car",
        "TAXI           -> ride_hail",
        "TNC_SHARED     -> ride_hail",
        "TNC_SINGLE     -> ride_hail",
        "WALK           -> walk",
        "WALK_COM       -> walk_transit",
        "WALK_EXP       -> walk_transit",
        "WALK_HVY       -> walk_transit",
        "WALK_LOC       -> walk_transit",
        "WALK_LRF       -> walk_transit",
      ]
    }

    #@optional
    reposition {
      name = "min-availability-observed-algorithm"
      #min-availability-observed-algorithm
      #min-availability-undersupply-algorithm
      min-availability-undersupply-algorithm = {
        matchLimit = 10
      }
      repositionTimeBin = 3600,
      statTimeBin = 300,

      AvailabilityBehaviorBasedRepositioning {
        matchLimit = 5555
      }
    }
  }
]
