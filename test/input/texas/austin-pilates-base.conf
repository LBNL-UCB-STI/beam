include "austin-oct2021-base.conf"

beam.agentsim.simulationName = "austin-pilates-base"

# full plans has 1506680 persons
# 300k -> 0.2
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 1.0
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 0

beam.physsim.flowCapacityFactor = 0.125
beam.physsim.name = "PARBPRSim"
beam.physsim.skipPhysSim = false
#merging incoming input with the lat run output
beam.input.lastBaseOutputDir = ${beam.outputs.baseOutputDirectory}
beam.input.simulationPrefix = ${beam.agentsim.simulationName}
beam.agentsim.agents.plans.merge.fraction = 0.3
beam.warmStart.type = "linkStatsFromLastRun"
beam.outputs.defaultWriteInterval=1
beam.router.skim.writeSkimsInterval = 1

beam.exchange {
  output {
    activitySimSkimsEnabled = true
    # geo level different than TAZ (in beam taz-centers format)
    geo.filePath = ${beam.inputDirectory}"/blockgroup-centers.csv.gz"
  }
}

beam.exchange.scenario {
  # source for now can be "MATSim" or "UrbanSim"
  source = "urbansim_v2"
  # Input file format for scenario loader can be "csv" or "parquet"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/urbansim"
  convertWgs2Utm = true
  modeMap = [
    "BIKE           -> bike",
    "DRIVEALONEFREE -> car",
    "DRIVEALONEPAY  -> car",
    "DRIVE_COM      -> drive_transit",
    "DRIVE_EXP      -> drive_transit",
    "DRIVE_HVY      -> drive_transit",
    "DRIVE_LOC      -> drive_transit",
    "DRIVE_LRF      -> drive_transit",
    "SHARED2FREE    -> hov2",
    "SHARED2PAY     -> hov2",
    "SHARED3FREE    -> hov3",
    "SHARED3PAY     -> hov3",
    "TAXI           -> ride_hail",
    "TNC_SHARED     -> ride_hail",
    "TNC_SINGLE     -> ride_hail",
    "WALK           -> walk",
    "WALK_COM       -> walk_transit",
    "WALK_EXP       -> walk_transit",
    "WALK_HVY       -> walk_transit",
    "WALK_LOC       -> walk_transit",
    "WALK_LRF       -> walk_transit",
  ]
}
