include "austin-prod-200k.conf"

beam.agentsim.simulationName = "austin-prod-100k-flowCap-0.1-without-teleportation"
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 0.068
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 5

beam.physsim.flowCapacityFactor = 0.1

beam.exchange.scenario {
  # source for now can be "MATSim" or "UrbanSim"
  source = "urbansim_v2"
  # Input file format for scenario loader can be "csv" or "parquet"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/urbansim_v2"
  convertWgs2Utm = true
  modeMap = [
    "BIKE           -> bike", # exist in plans
    "DRIVEALONEFREE -> car", # exist in plans
    "DRIVEALONEPAY  -> car", # exist in plans
    "DRIVE_LOC      -> drive_transit", # exist in plans
    "SHARED2FREE    -> car", # exist in plans
    "SHARED2PAY     -> car", # exist in plans
    "SHARED3FREE    -> car", # exist in plans
    "SHARED3PAY     -> car", # exist in plans
    "WALK           -> walk", # exist in plans
    "WALK_LOC       -> walk_transit", # exist in plans
    "WALK_LRF       -> walk_transit",
    "DRIVE_COM      -> drive_transit",
    "DRIVE_EXP      -> drive_transit",
    "DRIVE_HVY      -> drive_transit",
    "DRIVE_LRF      -> drive_transit",
    "TAXI           -> ride_hail",
    "TNC_SHARED     -> ride_hail",
    "TNC_SINGLE     -> ride_hail",
    "WALK_COM       -> walk_transit",
    "WALK_EXP       -> walk_transit",
    "WALK_HVY       -> walk_transit",
  ]
}

beam.router.skim = {
  origin-destination-skimmer {
    writeAllModeSkimsForPeakNonPeakPeriodsInterval = 0
    writeFullSkimsInterval = 0
  }
}

beam.urbansim.fractionOfModesToClear {
  allModes = 0.0
  car = 0.0
  bike = 0.0
  walk = 0.0
  walk_transit = 0.0
  drive_transit = 0.0
}

beam.outputs.defaultWriteInterval = 1
beam.outputs.writePlansInterval = ${beam.outputs.defaultWriteInterval}
beam.outputs.writeEventsInterval = ${beam.outputs.defaultWriteInterval}
beam.physsim.writeEventsInterval = ${beam.outputs.defaultWriteInterval}
beam.physsim.writePlansInterval = ${beam.outputs.defaultWriteInterval}