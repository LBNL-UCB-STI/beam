include "gemini-Scenario-1-Base-Unconstrained-Alameda-Oakland.conf"
beam.agentsim.simulationName = "gemini-Scenario-2-Base-Constrained-Alameda-Oakland-warmstarted"

beam.agentsim.lastIteration = 0
beam.physsim.skipPhysSim = false

########
# Charging Infrastructure
beam.agentsim.agents.rideHail.initialization.parking.filePath = ${beam.inputDirectory}"/../parking/gemini-base-scenario-2-depot-constrained.csv"
beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/../parking/gemini-base-scenario-2-parking-infra16-and-constrained-nonAO.csv"

beam.warmStart.type = "full"
beam.warmStart.path = "https://beam-outputs.s3.amazonaws.com/output/sfbay/gemini-Scenario-2-Base-Constrained-Alameda-Oakland__2021-09-11_03-19-53_vbo/warmstart_data.zip"

beam.agentsim.chargingNetworkManager {
  timeStepInSeconds = 300
  helics {
    connectionEnabled = true
    coreInitString = "--federates=1 --broker_address=tcp://127.0.0.1"
    coreType = "zmq"
    timeDeltaProperty = 1.0
    intLogLevel = 1
    federateName = "beamFederate"
    dataOutStreamPoint = "chargingLoad"
    dataInStreamPoint = "beam_to_pydss_federate/pubs_power_limit_and_lpm_control"
    bufferSize = 100000000
  }
}