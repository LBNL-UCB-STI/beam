include "gemini-base-2035.conf"

beam.agentsim.simulationName = "activitysim-gemini-cut-with-shapefile-71k"

# There are 718543 persons with plans in activitysim-plans-base-2010-cut-718k-by-shapefile
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 0.1

beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 0

beam.exchange.scenario {
  # source for now can be "MATSim" or "UrbanSim"
  source = "urbansim_v2"
  # Input file format for scenario loader can be "csv" or "parquet"
  fileFormat = "csv"
  folder = ${beam.inputDirectory}"/activitysim-plans-base-2010-cut-718k-by-shapefile"
  convertWgs2Utm = true
}

beam.physsim.flowCapacityFactor = 0.04

#########
# Charging Behavior calibration
#
# how far go from current position to charging
# increase both home and work
# decrease home 2 and increase home 1 when negative, increase home 2 and decreae home 1 when positive
beam.agentsim.agents.parking.mulitnomialLogit.params.distanceMultiplier = 5
# increase if need less public charging
# with -30 increase home 1 and 2 and decrease others
# with 30 significantly decrease home 1, increase work and DCFC, decrease public
beam.agentsim.agents.parking.mulitnomialLogit.params.parkingPriceMultiplier = 0
# home charging vs others
beam.agentsim.agents.parking.mulitnomialLogit.params.homeActivityPrefersResidentialParkingMultiplier = 0
# increase if need more public charging
# effect if small for small runs with values [-30,30]
beam.agentsim.agents.parking.mulitnomialLogit.params.rangeAnxietyMultiplier = 35
#########


#########
# using defaults because these values are overridden in gemini baseline
beam.agentsim.fractionOfPlansWithSingleActivity = 0.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.generate_secondary_activities = false
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.intercept_file_path = ""
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.activity_file_path = ""
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.additional_trip_utility = 0.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.max_destination_distance_meters = 32000
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.max_destination_choice_set_size = 20
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.destination_nest_scale_factor = 1.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.mode_nest_scale_factor = 1.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.trip_nest_scale_factor = 1.0
########


########
# google api usage
beam.calibration.google.travelTimes {
    enable=false
    iterationInterval=5
    minDistanceInMeters=5000.0
    numDataPointsOver24Hours=100
    offPeakEnabled=false
    queryDate="2020-10-14"
    tolls=true
}
########


########
# input data from activity sim
beam.routing {
  #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  baseDate = "2017-09-22T00:00:00-07:00"
  transitOnStreetNetwork = true
  r5 {
    directory = ${beam.inputDirectory}"/../r5-updated"
    # Departure window in min
    departureWindow = 1.0167
    osmFile = ${beam.inputDirectory}"/../r5-updated/sf-bay.osm.pbf"
    osmMapdbFile = ${beam.inputDirectory}"/../r5-updated/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
  }
}
########