# Note: this configuration will use paths relative to the project root (PWD) unless you override with these
# environment variables (use directories ending with slash):
# BEAM_OUTPUTS=/path/to/your/preferred/output/destination/

include "../smart/smart-baseline-2025.conf"

##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "gemini-runs-2021-02-27/gemini-base-2035"
beam.agentsim.lastIteration = 0


# CALIBRATION
beam.agentsim.agents.parking.mulitnomialLogit.params.distanceMultiplier = -0.086
beam.agentsim.agents.parking.mulitnomialLogit.params.parkingPriceMultiplier = -0.01
beam.agentsim.agents.parking.mulitnomialLogit.params.homeActivityPrefersResidentialParkingMultiplier = -1.3
beam.agentsim.agents.parking.mulitnomialLogit.params.rangeAnxietyMultiplier = -0.5
####



beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/../gemini/vehicle-tech/vehicletypes-Base_2035_20210204.csv"
beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypeId="conv-L1-0-to-50000-LowTech-2035-Car-ICEV_Gasoline"
beam.agentsim.agents.vehicles.vehiclesFilePath = ${beam.inputDirectory}"/../samples/vehicles.csv.gz"
beam.agentsim.agents.rideHail.initialization.parking.filePath = ${beam.inputDirectory}"/../parking/depot-parking-unlimited-150.csv"

beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/../parking/taz-parking-unlimited-fast-limited-l2-150-baseline.csv"
beam.agentsim.taz.parkingStallCountScalingFactor = 0.1



beam.agentsim.agents.vehicles.fractionOfInitialVehicleFleet = 1.0 // relative ownership of vehicle, if < 1.0, some will see their owned vehicle being retired
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 0.02 // How many ride hail agents, as a portion of initial total personal vehicles



# allocationManager(DEFAULT_MANAGER | STANFORD_V1 | BUFFERED_IMPL_TEMPLATE | RANDOM_REPOSITIONING | REPOSITIONING_LOW_WAITING_TIMES | DUMMY_DISPATCH_WITH_BUFFERING | POOLING_ALONSO_MORA)
beam.agentsim.agents.rideHail.allocationManager.name="POOLING_ALONSO_MORA"
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.waitingTimeInSec = 1200
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.travelTimeDelayAsFraction= 0.5
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.solutionSpaceSizePerVehicle = 4
beam.agentsim.agents.rideHail.allocationManager.requestBufferTimeoutInSeconds = 300

# repositioningManager can be DEFAULT_REPOSITIONING_MANAGER | DEMAND_FOLLOWING_REPOSITIONING_MANAGER | REPOSITIONING_LOW_WAITING_TIMES
beam.agentsim.agents.rideHail.repositioningManager.name="DEMAND_FOLLOWING_REPOSITIONING_MANAGER"
beam.agentsim.agents.rideHail.repositioningManager.timeout=300


# SKIMMER
beam.router.skim = {
  h3Resolution = 6
  keepKLatestSkims = 1
  writeSkimsInterval = 1
  writeAggregatedSkimsInterval = 1
  travel-time-skimmer {
    name = "travel-time-skimmer"
    fileBaseName = "skimsTravelTimeObservedVsSimulated"
  }
  origin_destination_skimmer {
    name = "od-skimmer"
    fileBaseName = "skimsOD"
    writeAllModeSkimsForPeakNonPeakPeriodsInterval = 0
    writeFullSkimsInterval = 0
  }
  taz-skimmer {
    name = "taz-skimmer"
    fileBaseName = "skimsTAZ"
  }
}

