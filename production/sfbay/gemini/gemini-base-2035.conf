# Note: this configuration will use paths relative to the project root (PWD) unless you override with these
# environment variables (use directories ending with slash):
# BEAM_OUTPUTS=/path/to/your/preferred/output/destination/

# This configuration is for gemini base 2035 as defined in the project
# It relies on SMART 2040 demand and 2035 EV penetration with same vehicle ownership as 2019 level (urbansim)
# Residential charging is XXX %, XFC is XXX %

include "../smart/smart-baseline-2040.conf"

##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "gemini-runs-2021-02-27/gemini-base-2035"
beam.agentsim.lastIteration = 10

# population
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 0.1

# ****************************************************************
########### CALIBRATION
#### Charging Behavior
beam.agentsim.agents.parking.mulitnomialLogit.params.distanceMultiplier = -0.086
beam.agentsim.agents.parking.mulitnomialLogit.params.parkingPriceMultiplier = -0.01
beam.agentsim.agents.parking.mulitnomialLogit.params.homeActivityPrefersResidentialParkingMultiplier = -1.3
beam.agentsim.agents.parking.mulitnomialLogit.params.rangeAnxietyMultiplier = -0.5
#### Secondary activities
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.generate_secondary_activities = "true"
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.intercept_file_path = ${beam.inputDirectory}"/trip-behaviors/activity-intercepts-12420.csv"
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.activity_file_path = ${beam.inputDirectory}"/trip-behaviors/activity-params-12420.csv"
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.additional_trip_utility = -2.0
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.destination_nest_scale_factor = 0.2
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.mode_nest_scale_factor = 0.5
beam.agentsim.agents.tripBehaviors.mulitnomialLogit.trip_nest_scale_factor = 1.0
##########
# ****************************************************************

# Charging Network Manager
beam.agentsim.chargingNetworkManager {
  timeStepInSeconds = 300

  helics {
    connectionEnabled = false
    federateName = "CNMFederate"
    dataOutStreamPoint = "PowerDemand"
    dataInStreamPoint = "GridFed/PhysicalBounds"
    bufferSize = 1000
  }

  chargingPoint {
    thresholdXFCinKW = 250
    thresholdDCFCinKW = 50
  }
}


# VEHICLE CHARGING
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.name = "DefaultVehicleChargingManager"
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.mulitnomialLogit.params.drivingTimeMultiplier = -0.01666667 // one minute of driving is one util
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.mulitnomialLogit.params.queueingTimeMultiplier = -0.01666667 // one minute of queueing is one util
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.mulitnomialLogit.params.chargingTimeMultiplier = -0.01666667 // one minute of charging is one util
beam.agentsim.agents.rideHail.charging.vehicleChargingManager.defaultVehicleChargingManager.mulitnomialLogit.params.insufficientRangeMultiplier = -60.0 // indicator variable so straight 60 minute penalty if out of range


# TERMINATION CRITERION NAME OPTIONS:
beam.sim.termination.criterionName = "TerminateAtFixedIterationNumber"
beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.minLastIteration = 0
beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.maxLastIteration = 10
beam.sim.termination.terminateAtRideHailFleetStoredElectricityConvergence.relativeTolerance = 0.01

# parking
beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/../parking/taz-parking-unlimited-fast-limited-l2-150-baseline.csv"
beam.agentsim.taz.parkingStallCountScalingFactor = 0.1

# vehicles
beam.agentsim.agents.vehicles.fractionOfInitialVehicleFleet = 1.0 // relative ownership of vehicle, if < 1.0, some will see their owned vehicle being retired
beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/../gemini/vehicle-tech/vehicletypes-Base_2035_20210204.csv"
beam.agentsim.agents.vehicles.vehiclesFilePath = ${beam.inputDirectory}"/../samples/vehicles.csv.gz"
beam.agentsim.agents.vehicles.meanPrivateVehicleStartingSOC = 0.6
beam.agentsim.agents.vehicles.meanRidehailVehicleStartingSOC = 0.6

# ridehail
beam.agentsim.agents.rideHail.initialization.parking.filePath = ${beam.inputDirectory}"/../parking/depot-parking-150kw.csv"
beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypeId="conv-L1-0-to-50000-LowTech-2035-Car-ICEV_Gasoline"
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 0.02 // How many ride hail agents, as a portion of initial total personal vehicles
beam.agentsim.agents.rideHail.rideHailManager.radiusInMeters = 5000
beam.agentsim.agents.rideHail.vehicleManagerId = "ride-hail-default"
beam.agentsim.agents.rideHail.linkFleetStateAcrossIterations = true

# Ridehail Matching
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.waitingTimeInSec = 1200
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.travelTimeDelayAsFraction= 0.5
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.solutionSpaceSizePerVehicle = 4
beam.agentsim.agents.rideHail.allocationManager.requestBufferTimeoutInSeconds = 300

# Reposition
beam.agentsim.agents.rideHail.repositioningManager.name="DEMAND_FOLLOWING_REPOSITIONING_MANAGER"
beam.agentsim.agents.rideHail.repositioningManager.timeout=300
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemand=3.4
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.sensitivityOfRepositioningToDemandForCAVs=1.7
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.fractionOfClosestClustersToConsider=0.2
beam.agentsim.agents.rideHail.repositioningManager.demandFollowingRepositioningManager.numberOfClustersForDemand=300

# Replanning
beam.replanning{
  maxAgentPlanMemorySize = 6
  Module_1 = "SelectExpBeta"
  ModuleProbability_1 = 0.5
  Module_2 = "ClearRoutes"
  ModuleProbability_2 = 0.0
  Module_3 = "AddSupplementaryTrips"
  ModuleProbability_3 = 0.3
  Module_4 = "TimeMutator"
  ModuleProbability_4 = 0.3
}

# SKIMMER
beam.router.skim = {
  h3Resolution = 6
  keepKLatestSkims = 1
  writeSkimsInterval = 1
  writeAggregatedSkimsInterval = 1
  travel-time-skimmer {
    name = "travel-time-skimmer"
    fileBaseName = "skimsTravelTimeObservedVsSimulated"
  }
  origin_destination_skimmer {
    name = "od-skimmer"
    fileBaseName = "skimsOD"
    writeAllModeSkimsForPeakNonPeakPeriodsInterval = 0
    writeFullSkimsInterval = 0
    poolingTravelTimeOveheadFactor = 1.21
  }
  taz-skimmer {
    name = "taz-skimmer"
    fileBaseName = "skimsTAZ"
  }
}

