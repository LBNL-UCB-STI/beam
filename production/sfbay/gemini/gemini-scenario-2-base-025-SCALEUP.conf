include "gemini-scenario-2-base-constrained-alameda-WARMSTARTED.conf"
beam.agentsim.simulationName = "gemini-scenario-2-base-025-SCALEUP"

# linkstats only because otherwise the scaling of population won't work
beam.warmStart.type = "linkStatsOnly"

######## scaling variables
beam.agentsim.agentSampleSizeAsFractionOfPopulation = 0.25
beam.agentsim.taz.parkingStallCountScalingFactor = 0.25
beam.physsim.flowCapacityFactor = 0.267
beam.agentsim.lastIteration = 0
beam.physsim.skipPhysSim = false
########
beam.agentsim.chargingNetworkManager {
  timeStepInSeconds = 300
  chargingPointCountScalingFactor = 1.0
  chargingPointCostScalingFactor = 1.0
  chargingPointFilePath =  ${beam.inputDirectory}"/../parking/gemini-base-scenario-2-charging-no-household-infra16.csv"
  scaleUp {
    enabled = true
    name_chargingType_1 = "homelevel1(1.8|AC)"
    expansionFactor_chargingType_1 = 4.0
    name_chargingType_2 = "homelevel2(7.2|AC)"
    expansionFactor_chargingType_2 = 4.0
    name_chargingType_3 = "worklevel2(7.2|AC)"
    expansionFactor_chargingType_3 = 4.0
    name_chargingType_4 = "publiclevel2(7.2|AC)"
    expansionFactor_chargingType_4 = 4.0
    name_chargingType_5 = "publicfc(150.0|DC)"
    expansionFactor_chargingType_5 = 4.0
    name_chargingType_6 = "publicxfc(250.0|DC)"
    expansionFactor_chargingType_6 = 4.0
  }
  helics {
    connectionEnabled = false
    coreInitString = "--federates=1 --broker_address=tcp://127.0.0.1"
    coreType = "zmq"
    timeDeltaProperty = 1.0
    intLogLevel = 1
    federateName = "beamFederate"
    dataOutStreamPoint = "chargingLoad"
    dataInStreamPoint = "beam_to_pydss_federate/pubs_power_limit_and_lpm_control"
    bufferSize = 10000000
  }
}

